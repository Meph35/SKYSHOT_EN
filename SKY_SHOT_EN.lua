do local v0=0;local v1;local v2;local v3;local v4;local v5;while true do if (v0==3) then local v6=0;while true do if (v6==2) then function setadd(v130,v131,v132,v133)local v134=0;local v135;local v136;while true do if (v134==1) then while true do if (v135==1) then gg.setValues(v136);if v133 then gg.addListItems(v136);elseif (indexof(sarray,v136[1].address)== -1) then gg.removeListItems(v136);else gg.addListItems(v136);end break;end if (v135==0) then local v474=0;while true do if (v474==0) then v136={};v136[1]={address=v130,flags=v131,value=v132,freeze=v133};v474=1;end if (1==v474) then v135=1;break;end end end end break;end if (v134==0) then local v293=0;while true do if (v293==0) then v135=0;v136=nil;v293=1;end if (v293==1) then v134=1;break;end end end end end function setstr(v137,v138,v139)local v140=0;local v141;while true do if (v140==0) then v141=0;while true do if (v141==1) then local v475=0;while true do if (v475==0) then local v569=0;while true do if (v569==1) then v475=1;break;end if (v569==0) then if ( #nn<v138) then local v761=0;local v762;while true do if (v761==0) then v762=0;while true do if (v762==0) then mm=v138-#nn ;for v888=1,mm do table.insert(nn,0);end break;end end break;end end end for v736=1,v138 do table.insert(hv,{address=v137 + (v736-1) ,flags=gg.TYPE_BYTE,value=nn[v736]});end v569=1;end end end if (v475==1) then v141=2;break;end end end if (0==v141) then local v476=0;while true do if (v476==1) then v141=1;break;end if (v476==0) then local v570=0;while true do if (v570==0) then nn=gg.bytes(v139);hv={};v570=1;end if (v570==1) then v476=1;break;end end end end end if (2==v141) then gg.setValues(hv);break;end end break;end end end v6=3;end if (v6==4) then function has(v142,v143)local v144=0;while true do if (v144==0) then local v294=0;while true do if (v294==0) then for v526,v527 in ipairs(v142) do if (v527==v143) then return true;end end return false;end end end end end v0=4;break;end if (v6==3) then function addtostr(v145,v146)local v147=0;local v148;while true do if (v147==0) then v148=0;while true do local v407=0;while true do if (v407==0) then if (v148==1) then return mp;end if (0==v148) then mp="";for v611=0,v146 do mu=getadd(v145 + v611 ,gg.TYPE_BYTE);if (mu<1) then break;end mp=mp   .. string.char(mu) ;end v148=1;end break;end end end break;end end end function indexof(v149,v150)local v151=0;local v152;while true do if (0==v151) then v152=0;while true do if (v152==0) then local v477=0;while true do if (v477==0) then for v612,v613 in ipairs(v149) do if (v613==v150) then return v612;end end return  -1;end end end end break;end end end v6=4;end if (v6==0) then on="¦✅¦";off="¦❌¦";v6=1;end if (v6==1) then function sign(v153)if v153 then return on;else return off;end end function getadd(v154,v155)local v156=0;local v157;local v158;while true do if (0==v156) then v157=0;v158=nil;v156=1;end if (1==v156) then while true do if (v157==1) then return tonumber(b[1].value);end if (v157==0) then local v478=0;local v479;while true do if (v478==0) then v479=0;while true do if (v479==1) then v157=1;break;end if (0==v479) then v158={[1]={address=v154,flags=v155}};b=gg.getValues(v158);v479=1;end end break;end end end end break;end end end v6=2;end end end if (7==v0) then local v7=0;local v8;while true do if (v7==0) then v8=0;while true do if (v8==2) then v5=off;quick_results=nil;v8=3;end if (0==v8) then local v272=0;while true do if (v272==0) then cosmetics=off;friendnode_unlock=off;v272=1;end if (v272==1) then v8=1;break;end end end if (v8==4) then cosmetic_lock=off;v0=8;break;end if (v8==3) then clouds=off;clouds_results=nil;v8=4;end if (1==v8) then friend_nodes=nil;energy=off;v8=2;end end break;end end end if (12==v0) then local v9=0;local v10;while true do if (v9==0) then v10=0;while true do if (v10==1) then gg.searchNumber("32,481,138,503,150,965",gg.TYPE_QWORD,false,gg.SIGN_EQUAL,0, -1,1);if (gg.getResultsCount()==0) then local v408=0;local v409;while true do if (0==v408) then v409=0;while true do if (v409==0) then gg.setRanges(gg.REGION_OTHER);gg.searchNumber("32,481,138,503,150,965",gg.TYPE_QWORD,false,gg.SIGN_EQUAL,0, -1,1);break;end end break;end end end v10=2;end if (v10==0) then gg.sleep(500);gg.setRanges(gg.REGION_C_ALLOC);v10=1;end if (v10==4) then if (gg.getResultsCount()==8) then local v410=0;local v411;local v412;while true do if (v410==1) then while true do if (v411==0) then v412=0;while true do if (3==v412) then gg.toast("3 - Successful");break;end if (v412==2) then local v737=0;local v738;while true do if (v737==0) then v738=0;while true do if (v738==1) then v412=3;break;end if (0==v738) then local v850=0;while true do if (v850==1) then v738=1;break;end if (v850==0) then xcu=1;gg.clearResults();v850=1;end end end end break;end end end if (v412==0) then local v739=0;while true do if (0==v739) then a=gg.getResults(1);cu=a[1].address-4 ;v739=1;end if (v739==1) then v412=1;break;end end end if (1==v412) then local v740=0;while true do if (v740==0) then cu0=6.577358e-23;cu1=1384120352;v740=1;end if (v740==1) then v412=2;break;end end end end break;end end break;end if (v410==0) then v411=0;v412=nil;v410=1;end end else gg.toast("3 - Failed");end v0=13;break;end if (3==v10) then local v273=0;while true do if (v273==0) then gg.setRanges(gg.REGION_CODE_APP);gg.searchNumber("-4.29621514e-14;-2.15730008e-14;-6.13017998e13;-1.27424102e34;-2.87131023e-14;-2.89733413e-14;-1.01380916e-28;-1.13700566e-13::29",16);v273=1;end if (1==v273) then v10=4;break;end end end if (v10==2) then if (gg.getResultsCount()==1) then local v413=0;local v414;local v415;while true do if (v413==1) then while true do if (v414==0) then v415=0;while true do if (v415==0) then pl=gg.getResults(1);pl0=pl[1].address;v415=1;end if (v415==1) then c2=1;gg.clearResults();break;end end break;end end break;end if (v413==0) then v414=0;v415=nil;v413=1;end end end gg.sleep(500);v10=3;end end break;end end end if (18==v0) then local v11=0;while true do if (v11==3) then for v159,v160 in ipairs(jumppwr) do revertjumppwr[v159]={address=v160.address,flags=v160.flags,value=v160.value};end gg.searchNumber("-3.16081619263",gg.TYPE_FLOAT);v11=4;end if (v11==1) then gg.refineNumber("4.9",gg.TYPE_FLOAT);jumppwr=gg.getResults(4);v11=2;end if (v11==2) then gg.clearResults();revertjumppwr={};v11=3;end if (v11==4) then flygrvt=gg.getResults(1);v0=19;break;end if (v11==0) then for v162,v163 in ipairs(undergrnd) do revertundergrnd[v162]={address=v163.address,flags=v163.flags,value=v163.value};end gg.searchNumber("4.90000009537F;4.59999990463F;0.89999997616F;0.81999999285F::13",gg.TYPE_FLOAT);v11=1;end end end if (v0==25) then local v12=0;local v13;while true do if (v12==0) then v13=0;while true do if (v13==3) then local v274=0;while true do if (v274==1) then v13=4;break;end if (v274==0) then function cv(v480,v481,v482,v483,v484,v485,v486)local v487=0;local v488;while true do if (v487==3) then if (v488[1].value>v481) then if (v488[2].value>v483) then if (v488[3].value<v485) then re=1;end end end if (re==1) then return true;else return false;end break;end if (v487==2) then local v571=0;while true do if (v571==2) then v487=3;break;end if (v571==1) then v488[3].flags=v486;v488=gg.getValues(v488);v571=2;end if (v571==0) then v488[3]={};v488[3].address=v484;v571=1;end end end if (v487==1) then v488[1].flags=v486;v488[2]={};v488[2].address=v482;v488[2].flags=v486;v487=2;end if (v487==0) then local v576=0;while true do if (1==v576) then v488[1]={};v488[1].address=v480;v576=2;end if (v576==2) then v487=1;break;end if (v576==0) then re=0;v488={};v576=1;end end end end end function sv(v489,v490,v491)local v492=0;local v493;local v494;while true do if (v492==0) then local v577=0;while true do if (v577==0) then v493=0;v494=nil;v577=1;end if (v577==1) then v492=1;break;end end end if (1==v492) then while true do if (v493==2) then v494[1].value=v491;gg.setValues(v494);break;end if (v493==1) then local v687=0;while true do if (v687==1) then v493=2;break;end if (v687==0) then v494[1].address=v489;v494[1].flags=v490;v687=1;end end end if (v493==0) then local v688=0;local v689;while true do if (v688==0) then v689=0;while true do if (v689==0) then v494={};v494[1]={};v689=1;end if (v689==1) then v493=1;break;end end break;end end end end break;end end end v274=1;end end end if (v13==1) then function fireworks()local v295=0;local v296;local v297;while true do if (1==v295) then while true do if (0==v296) then v297=0;while true do if (v297==2) then if (gg.getResultsCount()==1) then local v763=0;while true do if (v763==0) then pl=gg.getResults(1);fw=pl[1].address + 549628 ;break;end end end fv(fw,4,999999);break;end if (v297==0) then local v690=0;while true do if (v690==1) then v297=1;break;end if (v690==0) then gg.clearResults();gg.setRanges(gg.REGION_C_ALLOC);v690=1;end end end if (v297==1) then gg.searchNumber("32,481,138,503,150,965",gg.TYPE_QWORD,false,gg.SIGN_EQUAL,0, -1,1);if (gg.getResultsCount()==0) then local v764=0;while true do if (v764==0) then gg.setRanges(gg.REGION_OTHER);gg.searchNumber("32,481,138,503,150,965",gg.TYPE_QWORD,false,gg.SIGN_EQUAL,0, -1,1);break;end end end v297=2;end end break;end end break;end if (v295==0) then v296=0;v297=nil;v295=1;end end end function noselect()gg.toast("Nothing selected");end v13=2;end if (v13==2) then function rapidfarm()local v298=0;local v299;local v300;local v301;while true do if (v298==1) then v301=nil;while true do if (v299==1) then if v301 then for v691,v692 in ipairs(v300) do if gg.isVisible(true) then break;end gg.setValues({{address=coords.x,flags=gg.TYPE_FLOAT,value=v692[1]},{address=coords.y,flags=gg.TYPE_FLOAT,value=v692[2]},{address=coords.z,flags=gg.TYPE_FLOAT,value=v692[3]}});gg.sleep(1000);end else return gg.toast("There are no routes here at the moment");end break;end if (v299==0) then local v578=0;while true do if (v578==0) then local v693=0;while true do if (v693==0) then if settings.useautoburn then if (autoburn==off) then local v851=0;while true do if (v851==0) then set_autoburn(true);b=true;break;end end end end v300,v301=getCords();v693=1;end if (v693==1) then v578=1;break;end end end if (1==v578) then v299=1;break;end end end end break;end if (v298==0) then v299=0;v300=nil;v298=1;end end end function gv(v302,v303)local v304=0;local v305;while true do if (v304==0) then v305={};v305[1]={};v304=1;end if (1==v304) then v305[1].address=v302;v305[1].flags=v303;v304=2;end if (v304==3) then return v305;end if (v304==2) then v305=gg.getValues(v305);v305=v305[1].value;v304=3;end end end v13=3;end if (v13==0) then function MENU3()local v306=0;local v307;while true do if (0==v306) then v307=0;while true do if (v307==3) then gg.clearResults();break;end if (v307==1) then local v579=0;while true do if (v579==1) then v307=2;break;end if (v579==0) then gg.searchNumber(":com.tgc.sky.android.test.gold/0",gg.TYPE_BYTE);gg.getResults(5000);v579=1;end end end if (0==v307) then gg.clearResults();gg.setRanges(gg.REGION_C_ALLOC | gg.REGION_OTHER );v307=1;end if (v307==2) then local v580=0;while true do if (v580==0) then gg.editAll(":com.tgc.sky.android.test.gole/0",gg.TYPE_BYTE);gg.toast("Done");v580=1;end if (v580==1) then v307=3;break;end end end end break;end end end function betaorange()local v308=0;local v309;while true do if (v308==0) then v309=0;while true do if (v309==2) then gg.toast("OPEN SHOP AND HAVE FUN");break;end if (v309==0) then local v581=0;while true do if (v581==0) then local v694=0;while true do if (v694==0) then gg.setRanges(gg.REGION_CODE_APP);gg.searchNumber(":SPASS",gg.TYPE_BYTE,false,gg.SIGN_EQUAL,0, -1,0);v694=1;end if (v694==1) then v581=1;break;end end end if (v581==1) then v309=1;break;end end end if (v309==1) then local v582=0;local v583;while true do if (v582==0) then v583=0;while true do if (0==v583) then revert=gg.getResults(100000,nil,nil,nil,nil,nil,nil,nil,nil);gg.editAll("0",gg.TYPE_BYTE);v583=1;end if (1==v583) then v309=2;break;end end break;end end end end break;end end end v13=1;end if (v13==4) then function fv(v310,v311,v312)local v313=0;local v314;local v315;while true do if (v313==1) then while true do if (v314==0) then local v584=0;while true do if (0==v584) then v315={};v315[1]={};v584=1;end if (v584==1) then v314=1;break;end end end if (v314==1) then local v585=0;while true do if (v585==1) then v314=2;break;end if (v585==0) then local v696=0;while true do if (v696==0) then v315[1].address=v310;v315[1].flags=v311;v696=1;end if (v696==1) then v585=1;break;end end end end end if (v314==2) then local v586=0;while true do if (0==v586) then v315[1].value=v312;v315[1].freeze=true;v586=1;end if (v586==1) then v314=3;break;end end end if (v314==3) then gg.addListItems(v315);break;end end break;end if (v313==0) then local v499=0;while true do if (0==v499) then v314=0;v315=nil;v499=1;end if (v499==1) then v313=1;break;end end end end end v0=26;break;end end break;end end end if (v0==21) then function pmove(v41)local v42=0;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==2) then setposit(v43 + v47 ,v44,v45 + v48 );break;end if (1==v42) then local v165=0;while true do if (v165==0) then v47=v41 * math.sin(v46) ;v48=v41 * math.cos(v46) ;v165=1;end if (v165==1) then v42=2;break;end end end if (v42==0) then local v166=0;while true do if (v166==0) then v43,v44,v45=getadd(coords['z'],gg.TYPE_FLOAT),getadd(coords['y'],gg.TYPE_FLOAT),getadd(coords['x'],gg.TYPE_FLOAT);v46=getadd(player_r,gg.TYPE_FLOAT);v166=1;end if (v166==1) then v42=1;break;end end end end end function pmagic(v49,v50,v51)local v52=0;local v53;while true do if (v52==0) then v53=0;while true do if (v53==0) then local v316=0;while true do if (v316==1) then v53=1;break;end if (v316==0) then nn={};tgt=player + offsets.magic + (48 * (v49-1)) ;v316=1;end end end if (v53==1) then setadd(tgt,gg.TYPE_DWORD,v50,false);if (v50~=0) then local v430=0;local v431;while true do if (v430==0) then v431=0;while true do if (v431==0) then local v648=0;while true do if (v648==1) then v431=1;break;end if (v648==0) then setadd(tgt + 12 ,gg.TYPE_DWORD,2139095040,false);setadd(tgt + 40 ,gg.TYPE_DWORD,v51,false);v648=1;end end end if (v431==1) then setadd(player + offsets.magic + 3260 ,gg.TYPE_DWORD,12,true);break;end end break;end end else local v432=0;local v433;while true do if (v432==0) then v433=0;while true do if (v433==0) then local v649=0;local v650;while true do if (v649==0) then v650=0;while true do if (v650==1) then v433=1;break;end if (v650==0) then local v826=0;while true do if (v826==0) then setadd(tgt + 12 ,gg.TYPE_DWORD,0,false);setadd(tgt + 40 ,gg.TYPE_DWORD,0,false);v826=1;end if (v826==1) then v650=1;break;end end end end break;end end end if (1==v433) then setadd(player + offsets.magic + 3260 ,gg.TYPE_DWORD,12,false);break;end end break;end end end break;end end break;end end end function dospell()local v54=0;while true do if (v54==1) then magicmenu=gg.choice(mlist,nil,"Choose spell:");if (magicmenu==nil) then return;end v54=2;end if (v54==3) then if (magicmenu==1) then for v317,v318 in pairs(slotmenu) do local v319=0;local v320;local v321;while true do if (v319==1) then while true do if (0==v320) then v321=0;while true do if (v321==0) then mslot[v317]=magicsid[magicmenu][1];pmagic(v317,magicsid[magicmenu][2],0);break;end end break;end end break;end if (v319==0) then v320=0;v321=nil;v319=1;end end end else local v275=0;local v276;local v277;while true do if (v275==0) then v276=0;v277=nil;v275=1;end if (v275==1) then while true do if (v276==0) then v277=0;while true do if (v277==0) then mslot[slotmenu]=magicsid[magicmenu][1];pmagic(slotmenu,magicsid[magicmenu][2],0);break;end end break;end end break;end end end break;end if (v54==0) then local v167=0;local v168;while true do if (v167==0) then v168=0;while true do if (v168==0) then local v500=0;while true do if (1==v500) then v168=1;break;end if (v500==0) then mlist={};for v614,v615 in ipairs(magicsid) do table.insert(mlist,v615[1]);end v500=1;end end end if (v168==1) then v54=1;break;end end break;end end end if (v54==2) then local v169=0;while true do if (v169==1) then v54=3;break;end if (v169==0) then if (magicmenu==1) then slotmenu=gg.multiChoice(mslot,nil,"Choose slots to remove:");else slotmenu=gg.choice(mslot,nil,"Choose slot:");end if (slotmenu==nil) then return;end v169=1;end end end end end function show_candles(v55)local v56=0;local v57;while true do if (v56==0) then local v170=0;while true do if (v170==0) then v57={};for v416=0,512 do if (getadd((nentity + offsets.vcandles + (offsets.vcandles_dist * v416)) -4 ,gg.TYPE_DWORD)~=0) then if v55 then table.insert(v57,{address=nentity + offsets.vcandles + (offsets.vcandles_dist * v416) ,flags=gg.TYPE_DWORD,value=28673});else table.insert(v57,{address=nentity + offsets.vcandles + (offsets.vcandles_dist * v416) ,flags=gg.TYPE_DWORD,value=0});end else break;end end v170=1;end if (1==v170) then v56=1;break;end end end if (1==v56) then gg.toast( #v57);gg.setValues(v57);break;end end end function collect_waxes()local v58=0;local v59;local v60;local v61;local v62;local v63;local v64;while true do if (v58==3) then while true do if (v59==2) then v64=nil;while true do if (v60==2) then local v501=0;local v502;while true do if (v501==0) then v502=0;while true do if (v502==1) then for v742,v743 in pairs(v63) do table.insert(v62,{address=v743.address-10 ,flags=gg.TYPE_FLOAT,value=99999});end gg.setValues(v62);v502=2;end if (v502==2) then v60=3;break;end if (v502==0) then v63=gg.getResults(gg.getResultCount());v64={};v502=1;end end break;end end end if (v60==1) then local v503=0;while true do if (v503==2) then v60=2;break;end if (v503==1) then gg.refineNumber( -128);v62={};v503=2;end if (v503==0) then gg.setRanges(gg.REGION_C_ALLOC);gg.searchNumber("h 00 00 60 40 00 00 00 00 00 00 80 BF 00 00 CD CD",gg.TYPE_BYTE,false,nil,nentity,player);v503=1;end end end if (v60==0) then local v504=0;while true do if (v504==0) then show_candles(true);v61=false;v504=1;end if (v504==2) then v60=1;break;end if (v504==1) then if (autoburn==off) then local v653=0;local v654;while true do if (0==v653) then v654=0;while true do if (v654==0) then set_autoburn(true);v61=true;break;end end break;end end end gg.clearResults();v504=2;end end end if (v60==3) then gg.clearResults();gg.setRanges(v3);if v61 then set_autoburn(false);end break;end end break;end if (v59==1) then v62=nil;v63=nil;v59=2;end if (v59==0) then local v322=0;while true do if (v322==1) then v59=1;break;end if (v322==0) then v60=0;v61=nil;v322=1;end end end end break;end if (1==v58) then v61=nil;v62=nil;v58=2;end if (v58==0) then v59=0;v60=nil;v58=1;end if (v58==2) then v63=nil;v64=nil;v58=3;end end end function set_autoburn(v65)if v65 then local v99=0;local v100;while true do if (v99==0) then v100=0;while true do if (v100==2) then local v434=0;local v435;while true do if (v434==0) then v435=0;while true do if (v435==0) then for v701,v702 in ipairs(plants) do local v703=0;local v704;local v705;while true do if (v703==1) then while true do if (v704==0) then v705=0;while true do if (v705==0) then v702.value=0;v702.freeze=true;break;end end break;end end break;end if (v703==0) then v704=0;v705=nil;v703=1;end end end gg.setValues(plants);v435=1;end if (1==v435) then v100=3;break;end end break;end end end if (v100==3) then gg.addListItems(plants);break;end if (v100==0) then local v436=0;local v437;while true do if (v436==0) then v437=0;while true do if (v437==0) then local v655=0;while true do if (v655==0) then autoburn=on;for v786,v787 in ipairs(candles) do local v788=0;local v789;while true do if (v788==0) then v789=0;while true do if (v789==0) then v787.value=1;v787.freeze=true;break;end end break;end end end v655=1;end if (v655==1) then v437=1;break;end end end if (v437==1) then v100=1;break;end end break;end end end if (v100==1) then local v438=0;while true do if (v438==0) then gg.setValues(candles);gg.addListItems(candles);v438=1;end if (v438==1) then v100=2;break;end end end end break;end end else local v101=0;local v102;while true do if (v101==0) then v102=0;while true do if (v102==0) then local v439=0;while true do if (v439==1) then v102=1;break;end if (v439==0) then autoburn=off;for v587,v588 in ipairs(candles) do local v589=0;while true do if (v589==0) then v588.value=0;v588.freeze=false;break;end end end v439=1;end end end if (v102==3) then gg.removeListItems(plants);break;end if (v102==2) then local v440=0;while true do if (v440==0) then local v547=0;while true do if (0==v547) then for v708,v709 in ipairs(plants) do local v710=0;while true do if (v710==0) then v709.value=1;v709.freeze=false;break;end end end gg.setValues(plants);v547=1;end if (v547==1) then v440=1;break;end end end if (1==v440) then v102=3;break;end end end if (1==v102) then local v441=0;while true do if (v441==1) then v102=2;break;end if (v441==0) then gg.setValues(candles);gg.removeListItems(candles);v441=1;end end end end break;end end end end function unlock_all(v66)if v66 then local v103=0;local v104;while true do if (v103==0) then v104=0;while true do if (v104==0) then local v442=0;while true do if (v442==1) then v104=1;break;end if (0==v442) then local v548=0;while true do if (v548==0) then cosmetics=on;setadd(bootloader + offsets.ptoemotes ,gg.TYPE_DWORD,1384120352,false);v548=1;end if (v548==1) then v442=1;break;end end end end end if (1==v104) then setadd(bootloader + offsets.ptocloset ,gg.TYPE_DWORD,1384120352,false);break;end end break;end end else local v105=0;while true do if (v105==1) then setadd(bootloader + offsets.ptocloset ,gg.TYPE_DWORD,446629856,false);break;end if (v105==0) then cosmetics=off;setadd(bootloader + offsets.ptoemotes ,gg.TYPE_DWORD, -1186976888,false);v105=1;end end end end function unlockelders()local v67=0;local v68;local v69;while true do if (v67==1) then while true do if (v68==1) then local v323=0;local v324;while true do if (v323==0) then v324=0;while true do if (v324==1) then v68=2;break;end if (v324==0) then local v590=0;while true do if (v590==0) then gg.searchNumber("h 00 00 00 00 00 00 80 3F CD CD CD CD 00 00 00 00",gg.TYPE_BYTE,false,nil,bootloader-8589934591 ,bootloader);v69=gg.getResultsCount();v590=1;end if (v590==1) then v324=1;break;end end end end break;end end end if (v68==0) then local v325=0;local v326;while true do if (0==v325) then v326=0;while true do if (v326==0) then gg.clearResults();gg.setRanges(gg.REGION_C_ALLOC);v326=1;end if (v326==1) then v68=1;break;end end break;end end end if (v68==2) then if (v69~=0) then local v443=0;while true do if (v443==0) then r=gg.getResults(v69);for v591,v592 in ipairs(r) do local v593=0;local v594;while true do if (v593==0) then v594=0;while true do if (v594==1) then v592.flags=gg.TYPE_FLOAT;break;end if (v594==0) then local v794=0;local v795;while true do if (v794==0) then v795=0;while true do if (v795==1) then v594=1;break;end if (v795==0) then v592.address=v592.address-2 ;v592.value=0;v795=1;end end break;end end end end break;end end end v443=1;end if (v443==1) then gg.setValues(r);break;end end end gg.setRanges(v3);break;end end break;end if (v67==0) then v68=0;v69=nil;v67=1;end end end function set_cosmetic_lock(v70)if v70 then local v106=0;local v107;local v108;while true do if (v106==1) then while true do if (v107==0) then v108=0;while true do if (v108==0) then local v549=0;while true do if (v549==1) then v108=1;break;end if (v549==0) then cosmetic_lock=on;cur_cape=gg.getValues({{address=player + offsets.cape2_off ,flags=gg.TYPE_DWORD}})[1].value;v549=1;end end end if (v108==1) then local v550=0;while true do if (1==v550) then v108=2;break;end if (v550==0) then cur_world1=get_map();capeset(cur_cape,false);v550=1;end end end if (v108==2) then cape_bckp=nil;break;end end break;end end break;end if (v106==0) then v107=0;v108=nil;v106=1;end end else local v109=0;while true do if (v109==0) then cosmetic_lock=off;capeset(cur_cape,false);break;end end end end v0=22;end if (v0==17) then local v14=0;while true do if (v14==4) then revertundergrnd={};v0=18;break;end if (v14==1) then local v110=0;while true do if (v110==1) then v14=2;break;end if (0==v110) then gg.clearResults();revertgraph={};v110=1;end end end if (v14==0) then gg.searchNumber("1,000.0F;0.05000000075F;-0.05000000075F::9",gg.TYPE_FLOAT);graph=gg.getResults(3);v14=1;end if (v14==3) then local v111=0;while true do if (v111==1) then v14=4;break;end if (0==v111) then undergrnd=gg.getResults(2);gg.clearResults();v111=1;end end end if (v14==2) then for v171,v172 in ipairs(graph) do revertgraph[v171]={address=v172.address,flags=v172.flags,value=v172.value};end gg.searchNumber("-0.01499999966",gg.TYPE_FLOAT);v14=3;end end end if (v0==14) then local v15=0;while true do if (v15==3) then local v112=0;while true do if (v112==1) then v15=4;break;end if (v112==0) then gg.refineNumber(1,gg.TYPE_FLOAT);wingpwr=gg.getResults(3);v112=1;end end end if (v15==0) then wnglv=gg.getResults(14);gg.clearResults();v15=1;end if (v15==4) then gg.clearResults();v0=15;break;end if (v15==1) then local v113=0;while true do if (v113==1) then v15=2;break;end if (v113==0) then revertwnglv={};for v327,v328 in ipairs(wnglv) do revertwnglv[v327]={address=v328.address,flags=v328.flags,value=v328.value};end v113=1;end end end if (v15==2) then gg.setRanges(gg.REGION_C_DATA);gg.searchNumber("0.30426996946F;1.0F;1.0F;1.0F;0.5F::73",gg.TYPE_FLOAT);v15=3;end end end if (4==v0) then local v16=0;while true do if (v16==4) then function make_positions(v174)local v175=0;local v176;local v177;while true do if (v175==0) then local v330=0;while true do if (v330==1) then v175=1;break;end if (v330==0) then v176=0;v177=nil;v330=1;end end end if (v175==1) then while true do local v417=0;while true do if (v417==0) then if (0==v176) then local v595=0;while true do if (v595==0) then v177={};for v744,v745 in ipairs(posits) do if (v745.map==v174) then table.insert(v177,v745);end end v595=1;end if (v595==1) then v176=1;break;end end end if (v176==1) then return v177;end break;end end end break;end end end v0=5;break;end if (v16==2) then local v114=0;while true do if (v114==1) then v16=3;break;end if (v114==0) then function get_pos_by_name(v331,v332)local v333=0;local v334;while true do if (0==v333) then v334=0;while true do if (0==v334) then local v596=0;local v597;while true do if (v596==0) then v597=0;while true do if (v597==0) then local v796=0;while true do if (v796==0) then for v852,v853 in ipairs(v331) do if (v853.name==v332) then return {x=v853.x,y=v853.y,z=v853.z};end end return nil;end end end end break;end end end end break;end end end function make_points_list(v335)local v336=0;local v337;while true do local v418=0;local v419;while true do if (v418==0) then v419=0;while true do if (v419==0) then if (v336==1) then return v337;end if (v336==0) then local v711=0;local v712;while true do if (v711==0) then v712=0;while true do if (v712==0) then local v835=0;while true do if (0==v835) then v337={};for v907,v908 in ipairs(crpoints) do if (v908.map==v335) then table.insert(v337,v908);end end v835=1;end if (1==v835) then v712=1;break;end end end if (v712==1) then v336=1;break;end end break;end end end break;end end break;end end end end v114=1;end end end if (v16==3) then function make_fastpoints_list(v178)return;end function make_map_list(v179)local v180=0;local v181;while true do if (0==v180) then v181={};for v420,v421 in ipairs(crpoints) do if (v421.family==v179) then if  not (has(v181,v421.name)) then table.insert(v181,v421.name);end end end v180=1;end if (1==v180) then return v181;end end end v16=4;end if (v16==1) then local v115=0;while true do if (v115==0) then function get_family_by_map(v338)local v339=0;local v340;local v341;while true do if (v339==0) then v340=0;v341=nil;v339=1;end if (1==v339) then while true do local v528=0;while true do if (v528==0) then if (v340==1) then return v341;end if (v340==0) then local v713=0;while true do if (v713==0) then v341=nil;for v814,v815 in ipairs(crpoints) do if (v815.map==v338) then v341=v815.family;break;end end v713=1;end if (v713==1) then v340=1;break;end end end break;end end end break;end end end function get_names(v342)local v343=0;local v344;local v345;while true do if (v343==0) then v344=0;v345=nil;v343=1;end if (v343==1) then while true do local v529=0;local v530;while true do if (v529==0) then v530=0;while true do if (0==v530) then if (v344==1) then return v345;end if (v344==0) then local v797=0;while true do if (v797==1) then v344=1;break;end if (v797==0) then v345={};for v854,v855 in ipairs(v342) do table.insert(v345,v855.name);end v797=1;end end end break;end end break;end end end break;end end end v115=1;end if (v115==1) then v16=2;break;end end end if (v16==0) then function get_map()local v182=0;local v183;local v184;while true do local v266=0;while true do if (v266==0) then if (v182==0) then v183="";v184="";v182=1;end if (v182==1) then for v531=0,23 do v184=getadd(curmap + v531 ,gg.TYPE_BYTE);if (v184==47) then break;end v183=v183   .. string.char(v184) ;end return v183;end break;end end end end function get_map_name()local v185=0;local v186;local v187;while true do if (v185==0) then v186=0;v187=nil;v185=1;end if (v185==1) then while true do if (v186==1) then return nil;end if (0==v186) then v187=get_map();for v532,v533 in ipairs(maps) do if (v533[2]==v187) then return v533[1];end end v186=1;end end break;end end end v16=1;end end end if (v0==24) then local v17=0;while true do if (v17==0) then function toggleQuick()local v188=0;local v189;local v190;while true do if (0==v188) then v189=0;v190=nil;v188=1;end if (v188==1) then while true do if (v189==0) then v190=0;while true do if (0==v190) then if v5 then local v657=0;local v658;while true do if (v657==0) then v658=0;while true do if (v658==0) then local v827=0;while true do if (v827==1) then v658=1;break;end if (v827==0) then quick_results[1].value=3.5;v5=false;v827=1;end end end if (1==v658) then gg.toast("Quick steps Off");break;end end break;end end else local v659=0;while true do if (v659==1) then gg.toast("Quick steps On");break;end if (v659==0) then local v765=0;while true do if (v765==1) then v659=1;break;end if (0==v765) then quick_results[1].value=200;v5=true;v765=1;end end end end end gg.setValues(quick_results);break;end end break;end end break;end end end function show_location()local v191=0;local v192;while true do if (v191==0) then v192=0;while true do if (1==v192) then gg.choice({"X : "   .. crds['x'] ,"Y : "   .. crds['y'] ,"Z : "   .. crds['z'] });break;end if (v192==0) then local v505=0;while true do if (v505==1) then v192=1;break;end if (v505==0) then values=gg.getValues({{address=coords['x'],flags=gg.TYPE_FLOAT},{address=coords['y'],flags=gg.TYPE_FLOAT},{address=coords['z'],flags=gg.TYPE_FLOAT}});crds={x=tostring(values[1].value),y=tostring(values[2].value),z=tostring(values[3].value)};v505=1;end end end end break;end end end v17=1;end if (v17==3) then local v116=0;while true do if (v116==1) then v17=4;break;end if (v116==0) then function rapidwings()local v346=0;local v347;local v348;local v349;while true do if (v346==1) then v349=nil;while true do if (v347==0) then v348,v349=getwings();if v349 then for v714,v715 in ipairs(v348) do if gg.isVisible(true) then break;end gg.setValues({{address=coords.x,flags=gg.TYPE_FLOAT,value=v715[3]},{address=coords.y,flags=gg.TYPE_FLOAT,value=v715[2]},{address=coords.z,flags=gg.TYPE_FLOAT,value=v715[1]}});gg.sleep(5500);end else return gg.toast("There are no routes here at the moment");end break;end end break;end if (v346==0) then v347=0;v348=nil;v346=1;end end end function getwings()local v350=0;local v351;local v350;local v352;local v353;local v354;while true do if (v350==1) then v352=nil;v353=nil;v350=2;end if (v350==2) then v354=nil;while true do if (v351==2) then while true do local v616=0;while true do if (v616==0) then if (v350==1) then local v798=0;local v799;while true do if (0==v798) then v799=0;while true do if (v799==1) then v350=2;break;end if (v799==0) then local v895=0;while true do if (v895==0) then v354=get_map();for v925,v926 in ipairs(crwings) do if (v926.map==v354) then local v937=0;local v938;while true do if (v937==0) then v938=0;while true do if (v938==0) then v353=true;table.insert(v352,{v926.x,v926.y,v926.z});break;end end break;end end end end v895=1;end if (v895==1) then v799=1;break;end end end end break;end end end if (v350==2) then return v352,v353;end v616=1;end if (v616==1) then if (v350==0) then v352={};v353=nil;v350=1;end break;end end end break;end if (v351==0) then local v598=0;while true do if (v598==0) then v350=0;v352=nil;v598=1;end if (v598==1) then v351=1;break;end end end if (v351==1) then v353=nil;v354=nil;v351=2;end end break;end if (v350==0) then v351=0;v350=nil;v350=1;end end end v116=1;end end end if (v17==1) then function AbsorbWings()local v193=0;local v194;local v195;local v196;local v197;local v198;while true do if (2==v193) then v198=nil;while true do if (v194==3) then gg.sleep(200);gg.setValues(v197);v194=4;end if (0==v194) then v195=nentity + offsets.wl_pos ;v196={};v194=1;end if (v194==2) then local v506=0;while true do if (0==v506) then for v617=0,11 do local v618=0;local v619;while true do if (v618==0) then v619=0;while true do if (v619==1) then if (st==1) then local v837=0;local v838;while true do if (v837==0) then v838=0;while true do if (v838==1) then table.insert(v197,{address=ad,value=8,flags=gg.TYPE_DWORD});break;end if (v838==0) then v198=v198 + 1 ;table.insert(v196,{address=ad,value=4,flags=gg.TYPE_DWORD});v838=1;end end break;end end end break;end if (v619==0) then ad=v195 + (v617 * 304) + 168 ;st=getadd(ad,gg.TYPE_DWORD);v619=1;end end break;end end end gg.setValues(v196);v506=1;end if (v506==1) then v194=3;break;end end end if (v194==4) then if (v198==0) then gg.toast("Aqui no se encuentran alas");else gg.toast("Alas encontradas: "   .. v198 );end break;end if (v194==1) then local v507=0;local v508;while true do if (v507==0) then v508=0;while true do if (v508==0) then v197={};v198=0;v508=1;end if (v508==1) then v194=2;break;end end break;end end end end break;end if (v193==1) then v196=nil;v197=nil;v193=2;end if (0==v193) then v194=0;v195=nil;v193=1;end end end function getposit()local v199=0;local v200;local v201;while true do if (v199==1) then while true do if (v200==0) then local v509=0;while true do if (v509==0) then local v599=0;while true do if (v599==0) then v201=gg.getValues({{address=coords['z'],flags=gg.TYPE_FLOAT},{address=coords['y'],flags=gg.TYPE_FLOAT},{address=coords['x'],flags=gg.TYPE_FLOAT}});return {x=v201[1].value,y=v201[2].value,z=v201[3].value};end end end end end end break;end if (v199==0) then local v355=0;while true do if (v355==1) then v199=1;break;end if (v355==0) then v200=0;v201=nil;v355=1;end end end end end v17=2;end if (v17==2) then i=0;function UnlockSeason()local v202=0;local v203;while true do if (v202==0) then v203=0;while true do if (v203==1) then local v510=0;while true do if (v510==1) then v203=2;break;end if (v510==0) then revert=gg.getResults(1000,nil,nil,nil,nil,nil,nil,nil,nil);gg.editAll("0",gg.TYPE_QWORD);v510=1;end end end if (v203==2) then gg.clearResults();gg.toast(" CLEAR QUEST ON ");break;end if (0==v203) then gg.setRanges(gg.REGION_CODE_APP);gg.searchNumber("7037807",gg.TYPE_QWORD,false,gg.SIGN_EQUAL,0, -1,0);v203=1;end end break;end end end v17=3;end if (v17==4) then function UnlockSeason()local v204=0;local v205;while true do if (0==v204) then v205=0;while true do if (v205==0) then local v511=0;local v512;while true do if (v511==0) then v512=0;while true do if (0==v512) then gg.setRanges(gg.REGION_CODE_APP);gg.searchNumber("7037807",gg.TYPE_QWORD,false,gg.SIGN_EQUAL,0, -1,0);v512=1;end if (v512==1) then v205=1;break;end end break;end end end if (v205==2) then gg.clearResults();gg.toast(" CLEAR QUEST ON ");break;end if (1==v205) then local v513=0;while true do if (0==v513) then revert=gg.getResults(1000,nil,nil,nil,nil,nil,nil,nil,nil);gg.editAll("0",gg.TYPE_QWORD);v513=1;end if (1==v513) then v205=2;break;end end end end break;end end end v0=25;break;end end end if (0==v0) then local v18=0;local v19;while true do if (v18==0) then v19=0;while true do if (v19==4) then if (v1==nil) then local v422=0;local v423;while true do if (v422==0) then v423=0;while true do if (v423==0) then gg.alert("Process information acquisition error. The script exits.");os.exit();break;end end break;end end end v0=1;break;end if (v19==3) then sky2="com.tgc.sky.android.huawei";v1=gg.getTargetInfo();v19=4;end if (v19==1) then gameinfo=gg.getTargetInfo();if gg.isVisible(true) then gg.setVisible(false);end v19=2;end if (v19==2) then local v278=0;while true do if (v278==0) then sky0="com.tgc.sky.android";sky1="com.tgc.sky.android.test.gold";v278=1;end if (v278==1) then v19=3;break;end end end if (v19==0) then gg.alert("Welcome to skyshot!!");script={process={live="com.tgc.sky.android",beta="com.tgc.sky.android.test.gold"}};v19=1;end end break;end end end if (15==v0) then local v20=0;while true do if (v20==3) then for v206,v207 in ipairs(quickstp) do revertquickstp[v206]={address=v207.address,flags=v207.flags,value=v207.value};end gg.searchNumber("2.5",gg.TYPE_FLOAT);v20=4;end if (v20==0) then revertwingpwr={};for v209,v210 in ipairs(wingpwr) do revertwingpwr[v209]={address=v210.address,flags=v210.flags,value=v210.value};end v20=1;end if (v20==4) then chargwing=gg.getResults(1);v0=16;break;end if (v20==2) then gg.clearResults();revertquickstp={};v20=3;end if (v20==1) then gg.searchNumber("3.5",gg.TYPE_FLOAT);quickstp=gg.getResults(1);v20=2;end end end if (v0==1) then local v21=0;while true do if (v21==1) then v2="https://suiskyshot.000webhostapp.com/complementox1.lua";pcall(load(gg.makeRequest(v2).content));v21=2;end if (v21==4) then sarray={};v0=2;break;end if (v21==2) then maps={{"Home","CandleSpace"},{"Aviary village","MainStreet"},{"Shop Outfit","MainStreet_ShopOutfits"},{"Shop spells","MainStreet_ShopSpells"},{"Isle","Dawn"},{"Trials Cave","DawnCave"},{"Water Trial","Dawn_TrialsWater"},{"Earth Trial","Dawn_TrialsEarth"},{"Air Trial","Dawn_TrialsAir"},{"Fire Trial","Dawn_TrialsFire"},{"Prairie Butterfly Field","Prairie_ButterflyFields"},{"Bird Nest","Prairie_NestAndKeeper"},{"Sancuary Islands","Prairie_Island"},{"Prairie Cave","Prairie_Cave"},{"Prairie Village","Prairie_Village"},{"8 player puzzle","DayHubCave"},{"Prairie Temple","DayEnd"},{"Forest","Rain"},{"Forest Clearing","RainForest"},{"Forest Elevated Clearing","RainShelter"},{"Forest Caves","Rain_Cave"},{"Forest Boneyard","RainMid"},{"Forest Temple","RainEnd"},{"Treehouse","Rain_BaseCamp"},{"Wind Paths","Skyway"},{"Valley","Sunset"},{"Valley Citadel","Sunset_Citadel"},{"Valley Fly Race","Sunset_FlyRace"},{"Valley Race","SunsetRace"},{"Valley Race End","SunsetEnd"},{"Hermit Valley","Sunset_YetiPark"},{"Dream Village","SunsetVillage"},{"Valley Dream Theater","Sunset_Theater"},{"Valley Music Shop","SunsetVillage_MusicShop"},{"Valley Colosseum","SunsetColosseum"},{"Valley Temple","SunsetEnd2"},{"Wasteland Lobby","DuskStart"},{"Wasteland","Dusk"},{"Abyss Area","Dusk_Triangle"},{"Abyss End","Dusk_TriangleEnd"},{"Wasteland Graveyard","DuskGraveyard"},{"Forgotten Ark","DuskOasis"},{"Crab Fields","Dusk_CrabField"},{"Battlefield","DuskMid"},{"Wasteland Temple","DuskEnd"},{"Vault","Night"},{"Vault 2","Night2"},{"Night Shelter","Night_Shelter"},{"Vault End","NightEnd"},{"Vault Archive","NightArchive"},{"Starlight Desert","NightDesert"},{"Starlight Desert Beach","NightDesert_Beach"},{"Jar Cave","Night_JarCave"},{"Infinite Desert","Night_InfiniteDesert"},{"Planets","NightDesert_Planets"},{"Office","TGCOffice"},{"Void of Shattering","StormEvent_VoidSpace"},{"Days of Mischief","Event_DaysOfMischief"},{"Nintendo area","Nintendo_CandleSpace"},{"Eden","StormStart"},{"Eden mid","Storm"},{"Eden end","StormEnd"},{"!!! Orbit !!!","OrbitMid"},{"!!! Orbit 2 !!!","OrbitEnd"},{"!!! Heaven !!!","CandleSpaceEnd"},{"Credits map","Credits"}};v3=gg.getRanges();v21=3;end if (v21==3) then bootloader=nil;player=nil;v21=4;end if (v21==0) then if ((v1.packageName==sky0) or (v1.packageName==sky1) or (v1.packageName==sky2)) then else local v267=0;local v268;while true do if (v267==0) then v268=0;while true do if (v268==0) then gg.alert("Package name mismatch. The script exits.");os.exit();break;end end break;end end end offsets={ptoplayer=26314328,pos_off=5107072,ptoentity=26182544,ptonentity=5993772,curmap_off= -26871708,plants=14700712,gamespeed_off= -25833076,chat=6012804,portal2_off= -523936,ptoemotes=10757668,ptocloset=4049732,ptofnodes=8524832,ptopbase=4409576,gesture=4624180,camera=14953396,plbright=4571860,hcandle=5743632,wing_charge=4571692,sleeping=4589712,pose=4564008,closet_menu=22744936,constel_menu=22760072,ptofastitem= -69544,fastitem=620,damage=4571692,wl_pos=4935476,statue_pos= -8586556,magic=4620720,props_off=4579588,famount_off=4579588 + 5584 ,portal_off=4254472,vcandles=5137076,vcandles_dist=112,wind_off= -8890060};v21=1;end end end if (v0==10) then texture=off;cloudss=off;Skyshot= -1;str1=false;str2=false;str3=false;line="";positions={};gg.setRanges(v3);v0=11;end if (9==v0) then local v22=0;local v23;while true do if (v22==0) then v23=0;while true do if (0==v23) then wing=off;maxlvwing=off;v23=1;end if (v23==1) then wingpower=off;graphx=off;v23=2;end if (v23==4) then noequip=off;v0=10;break;end if (v23==2) then charg=off;under=off;v23=3;end if (v23==3) then jump=off;flygravity=off;v23=4;end end break;end end end if (v0==26) then function rv(v71)local v72=0;local v73;local v74;while true do if (v72==0) then v73=0;v74=nil;v72=1;end if (v72==1) then while true do if (v73==0) then local v356=0;local v357;while true do if (v356==0) then v357=0;while true do if (v357==1) then v73=1;break;end if (v357==0) then v74={};v74[1]={};v357=1;end end break;end end end if (v73==1) then v74[1].address=v71;gg.removeListItems(v74);break;end end break;end end end function wingpower()local v75=0;local v76;local v77;while true do if (v75==1) then while true do if (v76==0) then v77=0;while true do if (0==v77) then pwr=gg.choice({"[🪫] OFF","[🔋] soft","[💪] strong","[💪]strong extreme[💪] ","[⬆️] explore new hights","[⬇️] To high? Fly down","[🔙] BACK"},nil,"WARNING, DONT TRAP YOUR SELF");if (pwr==nil) then noselect();elseif (pwr==1) then local v620=0;while true do if (v620==1) then gg.toast("Wing power deactivated");break;end if (v620==0) then wingpower=off;gg.setValues(revertwingpwr);v620=1;end end elseif (pwr==2) then local v716=0;while true do if (v716==1) then gg.setValues(wingpwr);gg.toast("Wing power activated");break;end if (v716==0) then local v800=0;while true do if (v800==1) then v716=1;break;end if (v800==0) then wingpower=on;wingpwr[3].value="2";v800=1;end end end end elseif (pwr==3) then local v766=0;local v767;local v768;while true do if (v766==0) then v767=0;v768=nil;v766=1;end if (v766==1) then while true do if (v767==0) then v768=0;while true do if (v768==0) then local v918=0;while true do if (0==v918) then local v931=0;while true do if (v931==1) then v918=1;break;end if (v931==0) then wingpower=on;wingpwr[3].value="5";v931=1;end end end if (v918==1) then v768=1;break;end end end if (1==v768) then gg.setValues(wingpwr);gg.toast("Wing power activated");break;end end break;end end break;end end elseif (pwr==4) then local v816=0;local v817;while true do if (v816==0) then v817=0;while true do if (v817==0) then local v909=0;while true do if (v909==0) then local v927=0;while true do if (1==v927) then v909=1;break;end if (v927==0) then wingpower=on;wingpwr[3].value="20";v927=1;end end end if (v909==1) then v817=1;break;end end end if (1==v817) then gg.setValues(wingpwr);gg.toast("Wing power activated");break;end end break;end end elseif (pwr==5) then local v840=0;local v841;while true do if (v840==0) then v841=0;while true do if (v841==0) then local v922=0;while true do if (v922==1) then v841=1;break;end if (v922==0) then wingpower=on;wingpwr[3].value="2000";v922=1;end end end if (1==v841) then gg.setValues(wingpwr);gg.toast("Wing power activated");break;end end break;end end elseif (pwr==6) then local v867=0;local v868;local v869;while true do if (v867==0) then v868=0;v869=nil;v867=1;end if (v867==1) then while true do if (v868==0) then v869=0;while true do if (v869==0) then local v947=0;local v948;while true do if (v947==0) then v948=0;while true do if (v948==0) then wingpower=on;wingpwr[3].value="-500";v948=1;end if (v948==1) then v869=1;break;end end break;end end end if (v869==1) then gg.setValues(wingpwr);gg.toast("Wing power activated");break;end end break;end end break;end end end break;end end break;end end break;end if (v75==0) then v76=0;v77=nil;v75=1;end end end function Frun()local v78=0;local v79;local v80;local v81;while true do if (v78==1) then v81=nil;while true do if (v79==0) then v80,v81=FragmentsRun();if v81 then for v514,v515 in ipairs(v80) do if gg.isVisible(true) then break;end gg.setValues({{address=coords.x,flags=gg.TYPE_FLOAT,value=v515[1]},{address=coords.y,flags=gg.TYPE_FLOAT,value=v515[2]},{address=coords.z,flags=gg.TYPE_FLOAT,value=v515[3]}});gg.sleep(600);end else return gg.toast("Go to coliseum");end break;end end break;end if (v78==0) then v79=0;v80=nil;v78=1;end end end function FragmentsRun()local v82=0;local v83;local v84;local v85;local v86;local v87;while true do if (0==v82) then v83=0;v84=nil;v82=1;end if (v82==1) then v85=nil;v86=nil;v82=2;end if (v82==2) then v87=nil;while true do if (v83==0) then v84=0;v85=nil;v83=1;end if (v83==1) then v86=nil;v87=nil;v83=2;end if (v83==2) then while true do local v424=0;while true do if (0==v424) then local v534=0;while true do if (v534==0) then if (v84==0) then local v717=0;local v718;while true do if (v717==0) then v718=0;while true do if (v718==0) then v85={};v86=nil;v718=1;end if (1==v718) then v84=1;break;end end break;end end end if (v84==2) then return v85,v86;end v534=1;end if (1==v534) then v424=1;break;end end end if (v424==1) then if (v84==1) then local v601=0;local v602;while true do if (v601==0) then v602=0;while true do if (v602==1) then v84=2;break;end if (v602==0) then v87=get_map();for v818,v819 in ipairs(FramentsRun) do if (v819.map==v87) then v86=true;table.insert(v85,{v819.x,v819.y,v819.z});end end v602=1;end end break;end end end break;end end end break;end end break;end end end function start()local v88=0;local v89;local v90;while true do if (v88==1) then while true do if (v89==1) then if (ppoints~=nil) then local v444=0;local v445;local v446;while true do if (v444==0) then v445=0;v446=nil;v444=1;end if (v444==1) then while true do if (2==v445) then local v660=0;while true do if (v660==0) then local v769=0;while true do if (v769==0) then place=gg.choice(v446,nil,"SKYSHOT RETURNS");if (place==nil) then return;end v769=1;end if (v769==1) then v660=1;break;end end end if (v660==1) then v445=3;break;end end end if (v445==1) then local v661=0;while true do if (v661==1) then v445=2;break;end if (v661==0) then for v801,v802 in ipairs(mp_names) do table.insert(v446,v802);end table.insert(v446,largeText);v661=1;end end end if (v445==0) then local v662=0;while true do if (0==v662) then mp_names=get_names(ppoints);v446={"[⬆️] Break wall:"   .. settings.wdistance ,"[🏎️] Farming","[🕯️] Farming menu","[🪫] Floating and charge","[😂] Auto Wax!!","[🛰️] Show location","[⚙️] Settings","==================Go To Menu=================="};v662=1;end if (v662==1) then v445=1;break;end end end if (3==v445) then if (place==1) then pmove(settings.wdistance);elseif (place==2) then rapidfarm();elseif (place==3) then farmingmenu();elseif (place==4) then wing_charge();elseif (place==5) then otherhacks();elseif (place==6) then show_location();elseif (place==7) then settingsmenu();elseif (place==8) then else local v940=0;while true do if (v940==0) then pos=get_pos_by_name(ppoints,v446[place]);setposit(pos.x,pos.y,pos.z);break;end end end break;end end break;end end end break;end if (v89==0) then v90=get_map();ppoints=make_positions(v90);v89=1;end end break;end if (v88==0) then v89=0;v90=nil;v88=1;end end end function farmingmenu()local v91=0;local v92;local v93;while true do if (v91==0) then local v212=0;while true do if (v212==1) then v91=1;break;end if (v212==0) then v92=0;v93=nil;v212=1;end end end if (v91==1) then while true do if (v92==1) then if (ppoints~=nil) then local v447=0;local v448;local v449;while true do if (v447==0) then local v551=0;while true do if (v551==1) then v447=1;break;end if (0==v551) then v448=0;v449=nil;v551=1;end end end if (v447==1) then while true do if (v448==0) then local v663=0;local v664;while true do if (v663==0) then v664=0;while true do if (v664==0) then mp_names=get_names(ppoints);v449={"[⬆️] Break wall:"   .. settings.wdistance ,"[🦋] Wings Run","[🔷] Coliseum Fragments","[🪫] Floating and charge","[👟] Quick steps","[🔥] Auto-burn","===================Go To Menu==================="};v664=1;end if (v664==1) then v448=1;break;end end break;end end end if (v448==2) then if (place==nil) then return;end if (place==1) then pmove(settings.wdistance);elseif (place==2) then rapidwings();elseif (place==3) then Frun();elseif (place==4) then wing_charge();elseif (place==5) then toggleQuick();elseif (place==6) then set_autoburn();elseif (place==7) then else local v928=0;while true do if (v928==0) then pos=get_pos_by_name(ppoints,v449[place]);setposit(pos.x,pos.y,pos.z);break;end end end break;end if (v448==1) then local v665=0;local v666;while true do if (0==v665) then v666=0;while true do if (v666==0) then for v842,v843 in ipairs(mp_names) do table.insert(v449,v843);end place=gg.choice(v449,nil,"New Skyshot");v666=1;end if (v666==1) then v448=2;break;end end break;end end end end break;end end end break;end if (v92==0) then local v359=0;while true do if (v359==0) then v93=get_map();ppoints=make_positions(v93);v359=1;end if (v359==1) then v92=1;break;end end end end break;end end end gg.toast("SKYSHOT RETURNS!!");while true do if gg.isVisible(true) then local v117=0;local v118;local v119;while true do if (0==v117) then v118=0;v119=nil;v117=1;end if (v117==1) then while true do if (v118==0) then v119=0;while true do if (v119==0) then gg.setVisible(false);start();break;end end break;end end break;end end end end break;end if (v0==20) then local v24=0;local v25;while true do if (0==v24) then v25=0;while true do if (v25==4) then function setposit(v360,v361,v362)local v363=0;local v364;local v365;while true do if (v363==1) then while true do if (v364==0) then v365=0;while true do if (v365==0) then jh={{address=coords['z'],flags=gg.TYPE_FLOAT,value=v360},{address=coords['y'],flags=gg.TYPE_FLOAT,value=v361},{address=coords['x'],flags=gg.TYPE_FLOAT,value=v362}};gg.setValues(jh);break;end end break;end end break;end if (v363==0) then v364=0;v365=nil;v363=1;end end end v0=21;break;end if (v25==1) then function wing_charge()local v366=0;while true do if (v366==1) then gg.setValues(chargwing);gg.sleep(8000);v366=2;end if (v366==0) then charg=on;chargwing[1].value="4.5";v366=1;end if (2==v366) then gg.setValues(revertchargwing);charg=off;break;end end end function under()if (under==on) then local v450=0;while true do if (v450==1) then gg.toast("Underground is deactivated");break;end if (v450==0) then under=off;gg.setValues(revertundergrnd);v450=1;end end else local v451=0;local v452;while true do if (v451==0) then v452=0;while true do if (v452==0) then local v667=0;while true do if (0==v667) then local v770=0;while true do if (v770==0) then under=on;undergrnd[2].value="-2";v770=1;end if (v770==1) then v667=1;break;end end end if (v667==1) then v452=1;break;end end end if (v452==1) then gg.setValues(undergrnd);gg.toast("Underground is activated");break;end end break;end end end end v25=2;end if (v25==0) then gg.clearResults();function set_game_speed(v367)setadd(nentity + offsets.gamespeed_off ,gg.TYPE_FLOAT,v367,false);end v25=1;end if (v25==2) then local v279=0;while true do if (v279==1) then v25=3;break;end if (v279==0) then function jumping()if (jump==on) then local v552=0;local v553;while true do if (v552==0) then v553=0;while true do if (v553==1) then gg.toast("Jump distance midair is deactivated");break;end if (v553==0) then local v771=0;while true do if (1==v771) then v553=1;break;end if (v771==0) then jump=off;gg.setValues(revertjumppwr);v771=1;end end end end break;end end else local v554=0;local v555;while true do if (0==v554) then v555=0;while true do if (v555==0) then local v772=0;while true do if (v772==0) then jump=on;jumppwr[1].value="10";v772=1;end if (v772==1) then v555=1;break;end end end if (v555==1) then gg.setValues(jumppwr);gg.toast("Jump distance midair activated");break;end end break;end end end end function gravity()if (flygravity==on) then local v556=0;while true do if (v556==1) then gg.toast("flygravity deactivated");break;end if (v556==0) then flygravity=off;gg.setValues(revertflygravity);v556=1;end end else local v557=0;local v558;while true do if (v557==0) then v558=0;while true do if (v558==0) then flygravity=on;flygrvt[1].value="5";v558=1;end if (v558==1) then gg.setValues(flygrvt);gg.toast("flygravity activated");break;end end break;end end end end v279=1;end end end if (v25==3) then function clouds()if (cloudss==on) then local v453=0;local v454;while true do if (v453==0) then v454=0;while true do if (1==v454) then gg.toast("Clouds deactivated");break;end if (v454==0) then local v668=0;local v669;while true do if (0==v668) then v669=0;while true do if (v669==1) then v454=1;break;end if (v669==0) then local v831=0;while true do if (v831==0) then cloudss=off;gg.setValues(revertclouds);v831=1;end if (v831==1) then v669=1;break;end end end end break;end end end end break;end end else local v455=0;while true do if (v455==0) then local v559=0;while true do if (v559==1) then v455=1;break;end if (v559==0) then cloudss=on;clouds[1].value="0";v559=1;end end end if (v455==1) then gg.setValues(clouds);gg.toast("Clouds activated");break;end end end end function change_map(v368)local v369=0;local v370;local v371;while true do if (v369==0) then v370=0;v371=nil;v369=1;end if (1==v369) then while true do if (v370==0) then v371=0;while true do if (v371==0) then local v719=0;while true do if (v719==1) then v371=1;break;end if (0==v719) then setstr(player + offsets.portal_off ,30,"."   .. v368 );set_game_speed(10);v719=1;end end end if (v371==2) then local v720=0;local v721;while true do if (v720==0) then v721=0;while true do if (v721==0) then set_game_speed(1);setstr(player + offsets.portal_off ,30,".Rain_Cave");v721=1;end if (1==v721) then v371=3;break;end end break;end end end if (v371==3) then pmagic(8,0);break;end if (v371==1) then pmagic(8,224110574,0);gg.sleep(1000);v371=2;end end break;end end break;end end end v25=4;end end break;end end end if (v0==19) then local v26=0;local v27;while true do if (v26==0) then v27=0;while true do if (2==v27) then local v280=0;while true do if (v280==1) then v27=3;break;end if (v280==0) then gg.searchNumber("3.5",gg.TYPE_FLOAT);quick_results=gg.getResults(1);v280=1;end end end if (v27==0) then gg.clearResults();revertflygravity={};v27=1;end if (v27==3) then gg.clearResults();gg.searchNumber("1D;0.15000000596F;0.5F;1.0F;0.40000000596F::25",gg.TYPE_DWORD);v27=4;end if (v27==1) then for v372,v373 in ipairs(flygrvt) do revertflygravity[v372]={address=v373.address,flags=v373.flags,value=v373.value};end gg.setRanges(gg.REGION_C_DATA);v27=2;end if (v27==4) then clouds_results=gg.getResults(1);v0=20;break;end end break;end end end if (11==v0) then local v28=0;local v29;while true do if (v28==0) then v29=0;while true do if (v29==3) then local v281=0;while true do if (v281==0) then gg.searchNumber("7,020,670,180,468,457,475",gg.TYPE_QWORD,false,gg.SIGN_EQUAL,0, -1,1);if (gg.getResultsCount()==0) then local v535=0;local v536;while true do if (0==v535) then v536=0;while true do if (v536==0) then gg.setRanges(gg.REGION_OTHER);gg.searchNumber("7,020,670,180,468,457,475",gg.TYPE_QWORD,false,gg.SIGN_EQUAL,0, -1,1);break;end end break;end end end v281=1;end if (1==v281) then v29=4;break;end end end if (v29==4) then if (gg.getResultsCount()==1) then local v425=0;local v426;while true do if (v425==0) then v426=0;while true do if (v426==0) then local v621=0;local v622;while true do if (v621==0) then v622=0;while true do if (v622==0) then local v820=0;while true do if (1==v820) then v622=1;break;end if (v820==0) then mrange=gg.getRanges();a=gg.getResults(1);v820=1;end end end if (1==v622) then v426=1;break;end end break;end end end if (v426==2) then local v623=0;local v624;while true do if (v623==0) then v624=0;while true do if (v624==1) then v426=3;break;end if (v624==0) then base2=a[1].address + 2097152 ;c1=1;v624=1;end end break;end end end if (v426==1) then local v625=0;while true do if (v625==1) then v426=2;break;end if (0==v625) then base0=a[1].address;base1=a[1].address + 33554432 ;v625=1;end end end if (v426==3) then gg.clearResults();break;end end break;end end else gg.toast("1 - Failed");end v0=12;break;end if (v29==1) then gg.setVisible(false);gg.clearResults();v29=2;end if (v29==0) then local v282=0;while true do if (v282==1) then v29=1;break;end if (v282==0) then gg.clearResults();v4=gg.getRanges();v282=1;end end end if (v29==2) then local v283=0;while true do if (v283==0) then gg.toast("Searching for address");gg.setRanges(gg.REGION_C_ALLOC);v283=1;end if (v283==1) then v29=3;break;end end end end break;end end end if (v0==5) then local v30=0;local v31;while true do if (v30==0) then v31=0;while true do if (v31==3) then coords=find_pos();candle=coords['x'] -offsets.hcandle ;v31=4;end if (4==v31) then prop_bckp=nil;v0=6;break;end if (v31==2) then function find_nodes()if nentity_test then local v456=0;local v457;local v458;local v459;while true do local v517=0;while true do if (v517==1) then if (v456==1) then v459=45;for v722=0,v459 do if string.find(addtostr(v458 + (v722 * 744) + 1 ,20),"aceptar_") then table.insert(v457,{v458 + (v722 * 744) + offsets.node_off ,getadd(v458-offsets.node_off ,gg.TYPE_DWORD)});end end v456=2;end break;end if (v517==0) then if (0==v456) then local v671=0;while true do if (v671==1) then v456=1;break;end if (v671==0) then v457={};v458=nentity + offsets.friend_node ;v671=1;end end end if (2==v456) then local v672=0;while true do if (0==v672) then gg.toast("Found "   ..  #v457   .. " friendship nodes" );return v457;end end end v517=1;end end end else return {};end end find_adds();v31=3;end if (v31==1) then function find_candles()if nentity_test then local v460=0;local v461;local v462;local v463;while true do if (1==v460) then v463=nil;while true do if (v461==0) then local v673=0;while true do if (v673==0) then v462={};v463=nentity + 468 ;v673=1;end if (v673==1) then v461=1;break;end end end if (v461==1) then for v723=1,650 do table.insert(v462,{address=v463 + ((v723-1) * 448) ,flags=gg.TYPE_FLOAT,value=0,name="cndl",freeze=false});end return v462;end end break;end if (0==v460) then v461=0;v462=nil;v460=1;end end else return {};end end function find_plants()if nentity_test then local v464=0;local v465;local v466;local v467;while true do if (v464==0) then v465=0;v466=nil;v464=1;end if (v464==1) then v467=nil;while true do local v603=0;while true do if (v603==0) then if (v465==1) then local v774=0;while true do if (v774==0) then v467=gg.getValues(v466);return v467;end end end if (v465==0) then local v775=0;while true do if (1==v775) then v465=1;break;end if (v775==0) then local v832=0;while true do if (v832==1) then v775=1;break;end if (v832==0) then v466={};for v896=1,511 do v466[v896]={address=nentity + offsets.plants + ((v896-1) * 8) ,flags=gg.TYPE_FLOAT};end v832=1;end end end end end break;end end end break;end end else return {};end end v31=2;end if (v31==0) then function find_adds()bootloader=gg.getRangesList("libBootloader.so")[1].start;player=getadd(bootloader + offsets.ptoplayer ,gg.TYPE_QWORD);player_r=player + offsets.pos_off + 32 ;pbase=player + offsets.ptopbase ;nentity=getadd(bootloader + offsets.ptoentity ,gg.TYPE_QWORD) + offsets.ptonentity ;nentity_test=getadd(nentity,gg.TYPE_DWORD)==1099746509 ;if  not nentity_test then local v468=0;local v469;while true do if (v468==0) then v469=0;while true do if (v469==0) then gg.searchNumber(1099746509,gg.TYPE_DWORD);if (gg.getResultsCount()>0) then local v747=0;local v748;while true do if (v747==0) then v748=0;while true do if (v748==0) then nentity=gg.getResults(1)[1].address;nentity_test=getadd(nentity,gg.TYPE_DWORD)==1099746509 ;break;end end break;end end end break;end end break;end end end if  not nentity_test then gg.toast("Error, some functions may not work.");else curmap=nentity + offsets.curmap_off ;end end function find_pos()local v376=0;local v377;local v378;while true do if (v376==0) then v377=0;v378=nil;v376=1;end if (v376==1) then while true do if (v377==0) then local v604=0;while true do if (v604==0) then v378={z=player + offsets.pos_off ,y=player + offsets.pos_off + 4 ,x=player + offsets.pos_off + 8 };return v378;end end end end break;end end end v31=1;end end break;end end end if (v0==2) then settings={wdistance=5,useautoburn=true};gg.setRanges(gg.REGION_C_ALLOC);function otherhacks()local v94=0;local v95;local v96;while true do if (v94==1) then while true do if (v95==0) then v96=0;while true do if (v96==0) then pwr=gg.choice({"[🐇] AutoWax","[📰] Auto dailys","[🔒] Beta bypass","[🕯️] Beta orange candles","[🎆] Fireworks"},nil,"Welcome to AutoWax");if (pwr==nil) then noselect();elseif (pwr==1) then autowax();elseif (pwr==2) then autodaily();elseif (pwr==3) then MENU3();elseif (pwr==4) then betaorange();elseif (pwr==5) then fireworks();elseif (pwr==6) then clouds();end break;end end break;end end break;end if (v94==0) then v95=0;v96=nil;v94=1;end end end function fullenergy()if (xen==1) then if (s2==off) then local v269=0;while true do if (v269==0) then sv(en,4,en1);gg.toast("Enabled - Full Energy");break;end end else local v270=0;while true do if (0==v270) then sv(en,16,en0);gg.toast("Disabled - Full Energy");break;end end end else gg.toast("Address not found");end end function wingedlight()if (c2==1) then local v120=0;local v121;while true do if (v120==0) then v121=0;while true do if (v121==2) then if (wl==nil) then else local v537=0;local v538;local v539;local v540;local v541;while true do if (v537==1) then v540=nil;v541=nil;v537=2;end if (v537==0) then v538=0;v539=nil;v537=1;end if (v537==2) then while true do if (v538==1) then v541=gg.prompt({"Winged Light"},{v539},{"text"});if (v541~=nil) then local v803=0;local v804;local v805;local v806;while true do if (v803==0) then v804=0;v805=nil;v803=1;end if (v803==1) then v806=nil;while true do if (v804==0) then local v898=0;while true do if (v898==0) then v805=0;v806=nil;v898=1;end if (v898==1) then v804=1;break;end end end if (v804==1) then while true do if (v805==0) then v806=tonumber(v541[1]);if (v806~=nil) then if (v806>=0) then if (v806<=999999999) then sv(math.floor(wl),4,v806);else gg.toast(v540);end else gg.toast(v540);end else gg.toast(v540);end break;end end break;end end break;end end end break;end if (0==v538) then local v749=0;while true do if (v749==1) then v538=1;break;end if (v749==0) then v539=gv(wl,4);v540="Invalid value";v749=1;end end end end break;end end end break;end if (v121==1) then local v470=0;local v471;while true do if (v470==0) then v471=0;while true do if (v471==1) then v121=2;break;end if (v471==0) then local v674=0;while true do if (v674==0) then gg.searchNumber("403;0;-3.4E38~3.4E38F;-3.4E38~3.4E38F;-3.4E38~3.4E38F;8;10200::25",gg.TYPE_DWORD,false,gg.SIGN_EQUAL,pl0,pl0 + 1048575 ,0);if (gg.getResultsCount()==0) then gg.toast("Failed");else local v821=0;local v822;while true do if (v821==0) then v822=0;while true do if (v822==1) then local v910=0;while true do if (v910==0) then gg.clearResults();gg.toast("Successful");v910=1;end if (1==v910) then v822=2;break;end end end if (2==v822) then gg.sleep(500);break;end if (v822==0) then local v911=0;while true do if (v911==0) then pl=gg.getResults(7);wl=pl[1].address-16 ;v911=1;end if (v911==1) then v822=1;break;end end end end break;end end end v674=1;end if (v674==1) then v471=1;break;end end end end break;end end end if (v121==0) then local v472=0;while true do if (1==v472) then v121=1;break;end if (0==v472) then gg.toast("Searching for address");gg.setRanges(mrange);v472=1;end end end end break;end end else gg.toast("Address not found");end end function gamespeed()local v97=0;local v98;while true do if (v97==0) then v98=0;while true do if (v98==0) then if (gs==nil) then if (c1==1) then local v542=0;local v543;while true do if (v542==0) then v543=0;while true do if (v543==1) then gg.searchNumber("1.01~3.4E38;1.01~3.4E38;1E-45~0.1;1E-45~0.1::13",gg.TYPE_FLOAT,false,gg.SIGN_EQUAL,base0-512 ,base0,0);if (gg.getResultsCount()==0) then gg.toast("Failed");else local v807=0;while true do if (v807==0) then pl=gg.getResults(1);gs=pl[1].address-4 ;v807=1;end if (1==v807) then gg.clearResults();if (cv(gs + 4 ,1.99,gs + 8 ,1.99,gs + 12 ,0.000009,16)==false) then local v870=0;local v871;while true do if (v870==0) then v871=0;while true do if (v871==0) then gg.toast("Failed");gs=nil;break;end end break;end end else local v872=0;local v873;while true do if (v872==0) then v873=0;while true do if (v873==0) then gg.toast("Successful");gg.sleep(500);break;end end break;end end end break;end end end break;end if (v543==0) then local v750=0;while true do if (v750==0) then gg.toast("Searching for address");gg.setRanges(mrange);v750=1;end if (v750==1) then v543=1;break;end end end end break;end end else gg.toast("Address not found");end end if (gs==nil) then else local v473=0;while true do if (v473==1) then if (a==nil) then end if (a==1) then local v626=0;local v627;while true do if (0==v626) then v627=0;while true do if (v627==0) then local v823=0;while true do if (v823==0) then if (v>=10) then elseif (v>=3) then v=v + 1 ;elseif (v>=2) then v=v + 0.5 ;else v=v + 0.25 ;end sv(gs,16,v);v823=1;end if (v823==1) then v627=1;break;end end end if (v627==1) then gamespeed();break;end end break;end end end v473=2;end if (v473==2) then if (a==2) then local v628=0;local v629;while true do if (v628==0) then v629=0;while true do if (v629==1) then gamespeed();break;end if (v629==0) then local v824=0;while true do if (v824==0) then if (v<=0) then elseif (v>3) then v=v-1 ;elseif (v>2) then v=v-0.5 ;else v=v-0.25 ;end sv(gs,16,v);v824=1;end if (v824==1) then v629=1;break;end end end end break;end end end if (a==3) then end break;end if (v473==0) then v=gv(gs,16);a=gg.alert("Game Speed : x"   .. v ,">>","<<","cancel");v473=1;end end end break;end end break;end end end function autowax()if (c1==1) then local v122=0;local v123;while true do if (v122==0) then v123=gg.alert("AutoWax\n\nExecute?","Yes","No");if (v123~=0) then if (v123==1) then local v518=0;while true do if (v518==0) then local v605=0;while true do if (0==v605) then local v724=0;while true do if (v724==1) then v605=1;break;end if (v724==0) then gg.toast("Searching for address");gg.setRanges(mrange);v724=1;end end end if (v605==1) then v518=1;break;end end end if (v518==1) then gg.searchNumber("99~199;1~32;1~32;1~32;1~32;0.333F~99999F;-3.4E38F~3.4E38F::25",gg.TYPE_DWORD,false,gg.SIGN_EQUAL,base1,base1 + 23068671 ,0);if (gg.getResultsCount()==0) then gg.toast("Failed");else local v675=0;local v676;local v677;while true do if (v675==1) then while true do if (v676==0) then v677=0;while true do if (v677==2) then if (gg.getResultsCount()==0) then gg.toast("Failed");else local v912=0;local v913;while true do if (v912==0) then v913=0;while true do if (v913==1) then gg.clearResults();if (cv(gs + 4 ,1.99,gs + 8 ,1.99,gs + 12 ,0.000009,16)==false) then gg.toast("Failed");else local v958=0;local v959;local v960;while true do if (v958==1) then while true do if (2==v959) then local v978=0;while true do if (v978==1) then v959=3;break;end if (0==v978) then fv(gs,16,90);v960=os.time();v978=1;end end end if (1==v959) then gg.alert("Interrupted when open GameGuardian");ct=0;v959=2;end if (v959==4) then rv(gs);if (ct==1) then gg.toast("Interrupted");else gg.toast("Done"   .. " ("   .. (os.time() -v960)   .. "s)" );end break;end if (v959==3) then for v982,v983 in pairs(resulta) do if gg.isVisible(true) then gg.setVisible(false);ct=1;break;else local v990=0;local v991;while true do if (v990==0) then v991=0;while true do if (v991==0) then fv(gs,16,90);gg.toast("Execution "   .. v982   .. "/"   ..  #resulta );break;end end break;end end end gg.setValues({{address=dtaddr,flags=4,value=v983[1]}});for v984=0,( #v983-1)/32  do local v985=0;local v986;local v987;while true do if (v985==1) then while true do if (v986==0) then local v1001=0;local v1002;while true do if (v1001==0) then v1002=0;while true do if (v1002==1) then v986=1;break;end if (v1002==0) then v987={};for v1017=1,32 do if (v983[v1017 + 1 + (v984 * 32) ]~=nil) then v987[v1017]={address=dtaddr + (v1017 * 4) ,flags=4,value=v983[v1017 + 1 + (v984 * 32) ]};else break;end end v1002=1;end end break;end end end if (v986==1) then local v1003=0;while true do if (1==v1003) then v986=2;break;end if (0==v1003) then local v1011=0;while true do if (1==v1011) then v1003=1;break;end if (v1011==0) then v987[33]={address=dtaddr + (33 * 4) ,flags=4,value= #v987};gg.setValues(v987);v1011=1;end end end end end if (v986==2) then while gg.getValues(v987)[33].value~=0  do end break;end end break;end if (v985==0) then v986=0;v987=nil;v985=1;end end end end fv(gs,16,1);v959=4;end if (v959==0) then gg.toast("Successful");gg.sleep(1000);v959=1;end end break;end if (v958==0) then v959=0;v960=nil;v958=1;end end end break;end if (v913==0) then local v942=0;while true do if (v942==1) then v913=1;break;end if (v942==0) then pl=gg.getResults(1);gs=pl[1].address-4 ;v942=1;end end end end break;end end end break;end if (v677==1) then local v874=0;while true do if (v874==1) then v677=2;break;end if (v874==0) then local v919=0;while true do if (v919==0) then gg.clearResults();gg.searchNumber("1.01~3.4E38;1.01~3.4E38;1E-45~0.1;1E-45~0.1::13",gg.TYPE_FLOAT,false,gg.SIGN_EQUAL,base0-512 ,base0,0);v919=1;end if (1==v919) then v874=1;break;end end end end end if (v677==0) then local v875=0;local v876;while true do if (v875==0) then v876=0;while true do if (v876==0) then local v932=0;while true do if (v932==1) then v876=1;break;end if (v932==0) then pl=gg.getResults(7);dtaddr=pl[7].address;v932=1;end end end if (v876==1) then v677=1;break;end end break;end end end end break;end end break;end if (v675==0) then v676=0;v677=nil;v675=1;end end end break;end end elseif (v123==2) then main();end end break;end end else gg.toast("Address not found");end end function autodaily()if (c1==1) then local v124=0;local v125;local v126;local v127;while true do if (1==v124) then v127=nil;while true do if (0==v125) then v126=0;v127=nil;v125=1;end if (v125==1) then while true do if (v126==0) then v127=gg.alert("AutoDailies\n\nExecute?","Yes","No");if (v127~=0) then if (v127==1) then local v725=0;local v726;while true do if (v725==0) then v726=0;while true do if (v726==1) then gg.searchNumber("1;0~99999F;2;0~99999F;3;0~99999F;4;0~99999F::29",gg.TYPE_DWORD,false,gg.SIGN_EQUAL,base2,base2 + 16777215 ,0);if (gg.getResultsCount()==0) then gg.toast("Failed");else local v877=0;local v878;local v879;while true do if (v877==0) then v878=0;v879=nil;v877=1;end if (v877==1) then while true do if (0==v878) then v879=0;while true do if (1==v879) then gg.clearResults();if  not (gv(mrrw-4 ,4)==0) then gg.toast("Failed");else local v962=0;local v963;local v964;local v965;local v966;while true do if (1==v962) then v965=nil;v966=nil;v962=2;end if (v962==2) then while true do if (v963==1) then v966=nil;while true do if (v964==3) then local v992=0;while true do if (v992==0) then for v1004=1,rwsl do v965[v1004].value=v965[v1004].value + 60 ;end gg.setValues(v965);v992=1;end if (v992==2) then v964=4;break;end if (v992==1) then v965={};for v1006=1,rwsl do v965[v1006]={address=mrrw + rwjg + (4 * v1006) ,flags=4,value=mrrwid[v1006]};end v992=2;end end end if (v964==1) then local v993=0;local v994;while true do if (0==v993) then v994=0;while true do if (v994==0) then rwsl=count;rwjg=(rwsl * 8) + 12 ;v994=1;end if (v994==1) then rwjg2=rwjg + (rwsl * 4) ;mrrwid={};v994=2;end if (v994==2) then v964=2;break;end end break;end end end if (v964==2) then local v995=0;local v996;while true do if (v995==0) then v996=0;while true do if (v996==2) then v964=3;break;end if (v996==1) then for v1012=1,rwsl do v965[v1012]={address=mrrw + 4 + ((mrrwid[v1012] -1) * 8) ,flags=16};end v965=gg.getValues(v965);v996=2;end if (v996==0) then local v1008=0;while true do if (v1008==0) then for v1015=1,rwsl do mrrwid[v1015]=v1015;end v965={};v1008=1;end if (v1008==1) then v996=1;break;end end end end break;end end end if (v964==0) then local v997=0;local v998;while true do if (v997==0) then v998=0;while true do if (v998==0) then local v1009=0;while true do if (1==v1009) then v998=1;break;end if (v1009==0) then gg.toast("Successful");gg.sleep(1000);v1009=1;end end end if (v998==2) then v964=1;break;end if (v998==1) then local v1010=0;while true do if (0==v1010) then count=0;while true do count=count + 1 ;if (gv(mrrw + (count * 8) ,4)==(count + 1)) then gg.toast("Acquiring quest count > "   .. count );else gg.toast("Acquiring quest count > "   .. count );gg.sleep(200);gg.toast("Done");gg.sleep(1000);break;end end v1010=1;end if (1==v1010) then v998=2;break;end end end end break;end end end if (v964==4) then gg.setValues(v965);v966={{address=mrrw + rwjg2 ,flags=4,value=rwsl}};gg.setValues(v966);gg.toast("Daily quests completed");break;end end break;end if (v963==0) then v964=0;v965=nil;v963=1;end end break;end if (v962==0) then v963=0;v964=nil;v962=1;end end end break;end if (v879==0) then local v950=0;local v951;while true do if (0==v950) then v951=0;while true do if (v951==0) then local v975=0;while true do if (v975==0) then pl=gg.getResults(1);mrrw=pl[1].address;v975=1;end if (v975==1) then v951=1;break;end end end if (v951==1) then v879=1;break;end end break;end end end end break;end end break;end end end break;end if (v726==0) then gg.toast("Searching for address");gg.setRanges(mrange);v726=1;end end break;end end elseif (v127==2) then main();end end break;end end break;end end break;end if (0==v124) then v125=0;v126=nil;v124=1;end end else gg.toast("Address not found");end end resulta={{ -768833570, -114950142},{2081768701, -1475869311, -1475870469, -1475867244,2060386341, -1475869891, -1475867188, -1475869894, -1475869369,2060386402,2060386350,2060386346,2060386388, -1475869726,2060386373,2060386422, -1475869746,2060386390,2060386333, -1475867243,2060386378, -1475867241, -1475869295,2060386396,2060386398,2060386369, -1475869728,2060386367, -1475867187,2060386360, -1475867237,2060386362,2060386361,2060386331,2060386326,2060386365,2060386404, -11796312,2060386355,2060386403, -1475870470, -1475868052,2060386371, -1475869888, -1475869306, -1475869317,2060386386,2060386322, -1475869736,2060386399, -1475867239, -1475869739, -1475867248,2060386385,2060386358, -1475867247, -1475869734,2060386426, -11796317,2060386420,2060386405, -1475867246,2060386393,2060386392,2060386339,2060386379, -1475869733, -1475867307,2060386335, -1475869730,2060386408, -1475870615, -1475870434, -1475869900,2060386419,2060386425,2060386324,2060386380,2060386349,2060386401, -1475869883, -1475868057,2060386383, -1475869750,2060386318,2060386321,2060386328,2060386338,2060386421,2060386319,2060386363, -1475869354, -1475869368, -11796328, -1475869889,2060386364, -1475869353,2060386359, -1475869732,2060386375, -1475869351, -11796323, -1475869297, -1475869296,2060386384, -1475869292,2060386368, -1475867234,2060386344, -1475869893,2060386353,2060386387, -1475869314,2060386376, -1475867402, -1475867400,2060386317,2060386336,2060386351, -1475869884,2060386394,2060386329, -1475869312, -1475869299, -1475869897, -11796311, -1475867240,2060386332, -1475867238,2060386357, -1475867235, -1475869352, -1475867233,2060386334, -1475869722, -1475869898, -1475869727, -11796327, -11796325, -1475869305, -1475869316, -11796322,2060386348,2060386320, -11796318,2060386323,2060386423, -1475869723,2060386370,2060386409, -11796316, -11796314,2060386372, -1475869301,2060386327,2060386428, -11796310,2060386382, -11796309, -1475868053, -11796326,2060386407, -1475869735,2060386345,2060386381,2060386356,2060386374,2060386391, -1475870511, -1475867189,2060386400,2060386325,2060386366,2060386377,2060386342,2060386337,2060386410, -1475869291, -1475869744, -1475869731, -1475867392, -11796324, -11796313, -1475869882, -11796320, -1475869300, -11796321,2060386427, -1475867403, -1475867401,2060386330, -1475869737, -1475868754,2060386352, -11796315,2060386395, -1475867191, -1475867190, -1475869886, -1475869432, -1475869738, -11796319, -1475867242, -1475869729,2060386316,2060386343,2060386340,2060386397,2060386347, -1475869881, -1475869350, -1475867404, -1475869745,2060386354,2060386429, -1475869899, -1475869298, -1475867311, -1475869293,2060386389, -1475869887,2060386411, -1475867236, -1475869892, -1475867245, -1475867167, -1475867166, -1475868583, -1475868245, -1475868266, -1475868244, -1475868246, -1475867107, -1475868237, -1475867165, -1475867164, -1475867163, -1475868587, -1475869079, -1475869073, -1475869069, -1475869068, -1475869070, -1475869064, -1475869059, -1475868272, -1475869055, -1475869063, -1475867111, -1475867162, -1475867160, -1475867161, -1475867106, -1475867108, -1475868257, -1475868256, -1475868258, -1475868268, -1475869074, -1475869075, -1475867172, -1475867170, -1475867109, -1475868584, -1475868252, -1475868249, -1475868250, -1475868248, -1475868247, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475867095, -1475869072, -1475867156, -1475867155, -1475869071, -1475869067, -1475869065, -1475869066, -1475868255, -1475868254, -1475868253, -1475868267, -1475868582, -1475867157, -1475867159, -1475867158, -1475867105},{164626931,840696279, -11796145, -11796153, -11796359, -11796326, -11796299, -11796331, -11796221, -11796335, -11796292, -11796114, -11796354, -11796134,840696285, -11796159, -11796294, -11796237, -11796366, -11796228, -11796233, -11796123, -11796141, -11796287, -11796224, -11796146, -11796162, -11796167, -11796273, -11796143, -11796283,840696280, -11796124, -11796290, -11796297,840696276, -11796308, -11796360, -11796148,840696278, -11796163, -11796150, -11796278, -11796338, -11796109, -11796132, -11796276, -11796131, -11796357, -11796169, -11796312, -11796234, -11796137, -11796365, -11796155, -11796217, -11796099, -11796291, -11796144, -11796115, -11796277, -11796302, -11796348, -11796102, -11796122, -11796285, -11796333, -11796346, -11796107, -11796101, -11796231, -11796129, -11796158, -11796168, -11796307, -11796230, -11796269, -11796236, -11796317, -11796339, -11796171, -11796110,840696274, -11796282, -11796311, -11796271, -11796322, -1848049379, -11796274, -11796293, -11796272, -11796218, -11796324, -11796147, -11796157, -11796313, -11796320, -11796288, -11796321, -11796119,840696283, -11796229, -11796226, -11796314, -11796270, -11796315, -11796174, -11796305, -11796173, -11796118, -1848049380, -11796140, -11796139, -11796337, -11796295, -11796223, -11796136, -11796164, -11796128, -11796319, -11796340, -11796069, -11796281, -11796100, -11796172, -11796225, -11796161, -11796113, -11796286, -11796219, -11796279, -11796133, -11796152, -11796166, -11796316, -11796165, -11796367, -11796160, -11796298, -11796235,840696282, -11796332, -11796336, -11796154, -11796301, -11796220,840696277, -11796309, -11796135, -11796227, -11796323, -11796149, -11796275, -11796104, -11796108, -11796345, -11796329, -11796318, -11796170, -11796328, -11796306, -11796356, -11796138, -11796232, -11796303, -11796105, -11796327, -11796106, -11796130, -11796284, -11796142, -11796120, -11796151, -11796300, -11796358, -11796355, -11796156, -11796103, -11796280, -11796296, -11796304,2093678875,2093678875,2093678983,2093678983,2093678983,2093678983,2093678983,2093678983,2093678862,2093678862,2093678862,2093678862,2093678862,2093678862,2093678862,2093678862,2093678862,2093678940,2093678940,2093678940,2093678940,2093678940,2093678940,2060386386,2060386372,2060386387,2060386388,2060386426,2060386427,2060386421,34603138,2060386418,2060386423,2060386419,2060386420,2060386422, -11796411, -11796410, -11796409,2060386390,2060386385,2060386397,2060386389,2060386405,2060386396,2093678927,2093678927,2093678927,2093678927,2093678927,2093678927,2093678927,2093678927,2093678927,2093678927,2093678927,2093678927,2093678927,2093678888,2093678888,2093678888,2093678888,2093678888,2093678888,2093678888,2093678888,2093678914,2093678914,2093678914,2093678914,2093678914,2093678914,2093678914,2093678914,2093678914,2093678914,2093678914,2093678914,2060386401,2060386402,2060386403,2060386391,2060386399,2060386392,2060386393,2060386409,2060386431,34603094,34603095,2060386430,2060386429, -11796353,2060386428, -11796408, -11796407, -11796386, -11796385, -11796384, -11796383, -11796382, -11796381,2093678849,2093678849,2093678849,2093678849,2093678849,2093678849,2093678901,2093678901,2093678901,2093678901,2093678901,2093678901,2093678901,2093678901,2093678901,2093678901,2093678901,2093678901,2093678901,2093678901,34603102,2060386374,2060386424,2060386425,2060386414, -11796404, -11796403, -11796402, -11796401, -11796400, -11796399, -11796398, -11796397, -11796396, -11796395, -11796394, -11796393, -11796391, -11796390, -11796389, -11796388, -11796387, -11796380, -11796379,2093678953,2093678953,2093678953,2093678953,2093678953,2093678953},{ -2135324521, -11796204, -11796409,1167523990, -11796189, -11796202,1167523973, -11796379,1167523987, -11796404, -11796383, -11796368, -11796387,1167524013,1167524012, -11796394,1167524051,1167524071,1167524055,1167524073,1167524062,1167523991,1167524087,1167524093,1167523985,1167524084,1167524080,1167524058,1167524089,1167524081,1167523975,1167523995,1167524052,1167524005,1167524088, -11796216, -11796380, -11796227, -11796381, -11796366, -11796207, -11796199, -11796190, -11796376, -11796224, -11796211,1167523989, -11796201, -11796407, -11796198, -11796371, -11796370, -11796405, -11796229, -11796230, -11796402, -11796226, -11796408, -11796228, -11796406, -11796232, -11796197,1167524044, -11796186, -11796378,1167523986, -11796184, -11796185, -11796219, -11796385, -11796384, -11796188, -11796206, -11796377,1167524083,1167524059, -11796396,1167524085,1167524053, -11796209, -11796231,1167524043,1167524078, -11796382, -11796215, -11796208, -11796369, -11796395, -11796386, -11796220, -11796375, -11796392,1167524086, -11796367, -11796393, -11796210,1167523948, -11796213, -11796200,1167524042, -1948973999,34603327,34603326, -1948974989, -1948974299, -1948974299, -1948974299, -1948974299,34603298,34603300,2060386398, -11796326, -11796325, -11796324, -1848049365,2060386390, -1848049357,2060386404,2060386403,2060386394,2060386389,2060386393,2060386392, -11796321, -11796320, -11796319, -11796318, -11796317, -11796316, -11796315, -11796314, -11796313, -11796267, -11796266, -11796265, -11796264, -11796263, -11796262, -11796261, -11796260, -11796259,2060386480,2060386485,2060386484,2060386503,2060386502,2060386483,2060386481,2060386504,2060386479,2060386454,2060386455,2060386462,2060386452,2060386457,2060386459,2060386451,2060386458,2060386449,2060386406,2060386439,2060386434,2060386563,2060386448,2060386405, -11796311, -11796310,34603376,34603382,34603385,2060386489,2060386490,34603402,34603403,2060386488,34603380, -1948974929, -1948974929, -1948974929, -1948974929, -1948974929,2060386540,2060386541,2060386536,2060386539,2060386456,2060386460,2060386461,2060386466,2060386467,2060386559,2060386391,2060386493,2060386494,2060386495,2060386496,2060386497,2060386498,2060386534,2060386530,2060386533,2060386531,2060386499,2060386500,2060386506,2060386507,2060386508, -11796286, -11796285, -11796284, -11796283, -11796282, -11796281, -11796280, -11796279, -11796306, -11796305, -11796304, -11796303, -11796302, -11796301, -11796300, -11796299, -11796298,34603372,34603372,34603372,34603372,34603372,34603372,34603372,34603372,34603372,34603372,34603372,34603372,34603372,2060386445,2060386447,2060386442,2060386443,2060386444,2060386446,2060386603,2060386604, -11796278, -11796277, -11796276, -11796275, -11796274, -11796273, -11796272, -11796271, -11796270,2060386600,2060386402,2060386601,2060386551,2060386602,2060386395,2060386396,2060386472,2060386599, -11796257, -11796256, -11796255, -11796254, -11796253, -11796252, -11796251, -11796250, -11796249, -11796295, -11796294, -11796293, -11796292, -11796291, -11796290, -11796289, -11796288, -1948974839, -1948974842,2060386468,2060386478,2060386535, -1948974584, -1948974580,34603347, -1765408585, -1765408582, -1948974797, -1948974796, -1948974637, -1948974636, -1948974635, -1948974634, -1948974633, -1948974858, -1948974857,840695978,840695979,840695980,840695981,34603420, -1948973998, -1948974847, -1948974833, -1948974815, -1948974731},{ -1237641587, -11795904, -11795924,1293287546, -11795902, -881917946, -11795928, -11795937,1293288159, -11795935, -11795881, -11795942,1293287745,1293287547,1293287621, -11795916, -11795892, -11795907, -11795927, -11795920, -11795883, -11795896, -11795910, -11795900,1293287618,1293287756, -11795887,1293288990,1293287936,1293287750, -11795886,1293288989,1293288986, -11795885,1293287959,1926758854,1293288988, -11795890,1293288160, -11795912,1293288161, -11795899, -11795921, -11795882,1293288163,1293288991,1293287545,1293287960,1293287942,1293287951,1293287619,1293287747, -11795943, -11795936,1293287749,1293287755,1293287620,1293287617, -11795908, -11795934, -11795930, -11795929, -11795909, -11795919, -11795931,1293287549, -11795889, -11795926, -11795925,1293288162, -11795933, -11795898, -11795893,1926758937, -11795938, -1855455090, -11795888, -11795932, -11795903, -11795884, -11795891, -1466630124, -11795894, -11795940, -11795917,1293288993,1293287616, -11795911, -11795918,1293287544, -11795895, -11795914, -11795913, -11795897, -11795915, -11795923, -11795939, -11795906, -11795905,1293287548,1293288164,1293287941, -11796134, -11796133, -11796132, -11796131, -11796130, -11796128, -11796127, -11796126, -11796125, -11796124, -11796123, -11796121, -11796120, -11796119, -11796118, -11796117, -11796116, -11796114, -11796113, -11796112, -11796111, -11796110, -11796109, -11796107, -11796106, -11796105, -11796104, -11796103, -11796102, -11796100, -11796099, -11796098, -11796097, -11796096, -11796095, -11796093, -11796092, -11796091, -11796090, -11796089, -11796088, -11796086, -11796085, -11796084, -11796083, -11796082, -11796081, -11796079, -11796078, -11796077, -11796076, -11796075, -11796074, -11796141, -11796140, -11796139, -11796138, -11796137, -11796073,2060386369,2060386370,2060386368,2060386367,2060386365,2060386823,2060386823,2060386823,2060386823,2060386823,2060386823,2060386823,2060386823,2060386823,2060386823,2060386823,2060386823,2060386823,2060386823,2060386823,2060386378,2060386381,2060386375,2060386376,2060386377,2060386394,2060386396,2060386406,2060386833,2060386392,2060386393, -1855455206, -1855455204, -1855455205, -1855455207, -1855455096, -1855455218, -1855455222, -1855455214, -1855455216, -1855455213, -1855455223, -1855455177, -1855455174, -1855455179, -1855455178, -1855455176, -1855455217, -1855455230, -1855455210, -1855455226, -1855455231, -1855455227, -1855455076, -1855455075, -1855455074, -1855455073, -1855455072, -1855455071, -1855455070, -1855455069, -1855455068, -1855455064, -1855455061, -1855455060, -1855455056, -1855455048, -1855455012, -1855455006, -1855455005, -1855455003, -1855454968, -1855454967, -1855454965, -1855454962, -1855454961, -1855454958, -1855455162, -1855455038, -1855454995, -1855454994, -1855454993, -1855454991,2060386364,2060386380,2060386844,2060387026,2060387027,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400,2060386400},{ -1455381650, -11796171, -11795862, -11795860, -1541078608, -11795876, -11796076, -11795866, -11796166, -1541078761, -11795857, -1541078606, -1541078760, -11795861, -11796221, -11796054, -11796126, -1541078591, -11796216, -11795874, -11796071, -11796134, -11796226, -11796053, -11796086, -11795873, -11795937, -11795864, -11796222, -11795863, -11796058, -1541078755, -1541078596, -11796091, -11796229, -11796075, -11796125, -11796121, -1541078781, -1541078782, -11796060, -11796228, -11796214, -11796123, -11796088, -11795877, -11796064, -11796199, -11796082, -11795926, -11795935, -11796074, -11796220, -11796170, -11796092, -11796084, -11796388, -11796050, -11796223, -1541078600, -11795879, -11796048, -1541078593, -11796062, -11796218, -11796089, -11796097, -11796095, -11796132, -11796073, -1541078594, -11796078, -11796225, -11796044, -1541078762, -11796169, -11795855, -11795907, -11796061, -11796113, -11796217, -11796178, -1541078607, -11796099, -11795932, -11796219, -11796070, -11796133, -11796080, -1541078599, -11796212, -11796079, -11796055, -11796098, -11795867, -11796066, -11795875, -11796122, -11796179, -11796258, -11795887, -11795854,2060386339, -11795913, -11796072, -11796244, -11796101, -11795905, -1541078754, -11796239, -11796042, -11795856, -11796094, -11796068, -1541078601, -11796215, -11795897, -11795858, -1541078597, -11796230, -11796197, -11796382, -1541078604, -11796087, -11796093, -11795886, -11795859, -11795885, -11796096, -11796083, -11796077, -11796065, -11795928, -11796063, -11795918, -11795871, -11795868, -11796227, -11796085, -11795906, -1541078598, -11796067, -11795865, -11795950, -1541078592, -1541078595, -11796049, -11796177, -11795872, -11796057, -11796213, -11796224, -11796209, -11796090, -11796232, -11796069,1842806871,1842806871,1842806871,1842806871,2060386413,2060386411,2060386410,2060386478,2060386479,2060386481,2060386475,2060386489,2060386477,2060386490,34603227,2060386507,2060386373,2060386520,2060386376,2060386509,2060386522, -1541078808, -1541078807, -1541078806, -1541078805, -1541078804, -1541078803, -1541078802, -1541078801, -1541078800, -11796130, -11796129, -11796128, -1541078784, -1541078784, -1541078784, -1541078784,2060386383,2060386388,2060386384,2060386380,2060386381,2060386382,2060386379,2060386408,2060386530,2060386529,2060386528,2060386531,2060386526,2060386407,2060386532,2060386527, -1541078819, -1541078818, -1541078817, -1541078816, -1541078815, -1541078814, -1541078813, -1541078812, -1541078811, -11796153, -11796152, -11796151, -11796150, -11796149, -11796148, -11796147, -11796146,2060386496,2060386493,2060386492,2060386482, -1948974396,2060386491,2060386494, -1948974387,2060386392,2060386390,2060386505,2060386391,2060386495,2060386504,2060386389,2060386503,2060386393,2060386465,2060386466,2060386416,2060386395,2060386396,2060386394,34603371,34603370,2060386417, -11796162, -11796161, -11796160, -11796159, -11796158, -11796157, -11796156, -11796155, -11796154, -11796145, -11796144, -11796143, -11796142, -11796141, -11796139, -11796138, -11796137},{864432821, -11796452, -11796145, -11796153, -11796460, -11796390, -11796140, -11796418, -11796383, -11796387, -11796114, -11796054, -11796422, -11796157, -11796134, -11796053, -11796083, -11796463, -11796469, -11796086, -11796419, -11796149, -11796119, -11796058, -11796454, -11796385, -11796421, -11796108, -11796085, -11796052, -11796389, -11796123, -11796444, -11796088, -11796141, -11796082, -11796047, -11796411, -11796146, -11796425, -11796078, -11796143, -11796124, -11796084, -11796457, -11796158, -11796117, -11796065, -11796417, -11796136, -11796407, -11796128, -11796446, -11796148, -11796163, -11796150, -11796132, -11796443, -11796470, -11796414, -11796466, -11796109, -11796106, -11796468, -11796382, -11796388, -11796397, -11796161, -11796131, -11796116, -11796380, -11796453, -11796137, -11796155, -11796113, -11796164, -11796118, -11796156, -11796111, -11796384, -11796133, -11796115, -11796445, -11796080, -11796144, -11796055, -11796152, -11796402, -11796451, -11796139, -11796066, -11796462, -11796162, -11796420, -11796122,34603802, -11796135, -11796154, -11796165, -11796160, -11796125, -11796120, -11796107, -11796461, -11796459, -11796072, -11796110, -11796167, -11796064, -11796121, -11796142, -11796151, -11796159, -11796129, -11796068, -11796458, -11796168, -11796423, -11796073, -11796138, -11796386, -11796127, -11796071, -11796130, -11796112, -11796456, -11796381, -11796455, -11796079,2060386317, -11796049, -11796465, -11796467, -11796464, -11796069,2060386527, -11796267, -11796266, -11796265, -11796264, -11796263, -11796262, -11796261, -11796260, -11796259, -11796258, -11796257, -11796256, -11796254, -11796253, -11796252, -11796251, -11796250, -11796249, -11796248, -11796247, -11796246, -11796245, -11796244, -11796243,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326,2060386326, -11796332, -11796331, -11796330, -11796329, -11796328, -11796327, -11796326, -11796325, -11796324, -11796323, -11796322, -11796321,2060386518,2060386517,2060386519, -11796293, -11796292, -11796291, -11796290, -11796289, -11796288, -11796287, -11796286, -11796285, -11796284, -11796283, -11796282,2060386467,2060386468,2060386469,2060386470,2060386521,2060386522,2060386523, -11796343,2060386344, -11796342, -11796341, -11796340, -11796339, -11796338, -11796337, -11796336, -11796335,2060386347,2060386348, -11796319, -11796318, -11796317, -11796316, -11796315, -11796314, -11796313, -11796312, -11796311, -11796310, -11796309, -11796308, -11796306, -11796305, -11796304, -11796303, -11796302, -11796301, -11796300, -11796299, -11796298, -11796297, -11796296, -11796295, -11796280, -11796279, -11796278, -11796277, -11796276, -11796275, -11796274, -11796273, -11796272, -11796271, -11796270, -11796269,2060386384,2060386383,2060386387,2060386386,2060386385,2060386500,2060386496,2060386498,2060386499,2060386497},{ -1936060159, -11795976, -11796409, -11796189,2105409728, -11796110,2105409720,2402, -11795982, -11796390, -11795995, -11796418, -11796166, -11795954,2105409707, -11796415,34604580, -11795979, -11796038, -11795958, -11796400,2105409703, -11796387, -11796221, -11796335, -11796126,2212, -11796344, -11796412,2401, -11796472,2400, -11795937, -11795966, -11796419, -11796227, -11796350, -11796406, -11796125, -11796352, -11796383, -11796119,2105409727, -11796360, -11796178, -11796152, -11796147, -11796146, -11796145, -11796138, -11796347, -11796137,2105409722,34603265, -11796121, -11795975, -11796118, -11796417, -11796090, -11796107, -11796106, -11796168, -11796105, -11795952, -11796385, -11796100, -11796037, -11796096, -11796093, -11796103, -11796422, -11796408, -11796031, -11796039, -11796158, -11795959, -11796104, -11796176, -11796005, -11796002, -11796001, -11795997, -11796421, -11796044, -11796000, -11795983, -11795981, -11795978, -11796165, -11795977, -11795973, -11795970, -11795992, -11795964, -11795961, -11796036, -11795956, -11796099, -11795953, -11796160, -11796134, -11795951, -11796157, -11795948, -11795946, -11795943, -11796382, -11795942, -11795941, -11795938, -11795955, -11796389, -11796345, -11796405, -11796140,2105409701, -11796139, -11795939, -11796123, -11795993, -11795971, -11796042,2105409699, -11796212, -11796343, -11795947, -11795957, -11796388, -11796226,2105409706, -11796009,2105409713, -11796120, -11796023, -11795945, -11796151, -11795968, -11796088, -11796114, -11796109, -11796141, -11796399, -11796112, -11796153, -11796091, -11796130, -11795969, -11796410, -11796342,2105409719, -11796370, -11796156, -11796174, -11796045, -11795980, -11796175, -11796181, -11796184, -11796186, -11796179, -11796135, -11796149, -11796167, -11795930, -11796346, -11796006, -11796182, -11796162, -11796358,2105409705, -11796368, -11796113,2105409725, -11796161, -11796187,2105409702, -11796411, -11796416, -11796122, -11796040, -11796423, -11795944, -11796173, -11796398, -11796102, -11796159, -11795974, -11795949, -11796177, -11796047,34604581, -11796170, -11796143, -11796183, -11796092, -11796124, -11795994, -11796414, -11796117, -11796136, -11796043, -11796034, -11796164, -11796407, -11796128, -11796148, -11796163, -11796089, -11796097, -11796391, -1848049553,2213,2210, -11796095, -11796132, -11796046, -11796424, -11796041, -11796172,2209, -11796353, -11796131, -11796116, -11796169,34604543,405405699, -11796155, -11796029,34604569,2105409700, -11796185, -11796180, -11796111, -11795972, -11796384, -11796133, -11796188, -11795940,34604570, -11796144, -11796033, -11795965, -11796115, -11796032, -11796098, -11796348, -11796420,2403, -11796333, -11796336, -11796154, -11796028, -11796024, -11796101, -11796035, -11796094, -11795960,2105409711, -11795967, -11795963, -11796386, -11796127, -11795927, -11796142, -11796213,34604582, -11795950, -11796049,2211},{1638008359, -11795924, -11796110, -11795890,1167524309, -11796395, -11796342, -11796410, -11796145, -11796282, -11796076, -11796268, -11795947, -11796390, -11795882, -11796326, -11796404, -11796266, -11796418, -11796322, -11796267, -11795954, -11796274, -11796383, -11795958, -11796293, -11796272, -11796292, -11796114, -11796422, -11796126, -11796257, -11796071, -11796324, -11796354, -11795936,2060386422, -11796364, -11795928, -11796255, -11795964, -11796320, -11796083, -11796344, -11796288, -11795944, -11796256, -11795891, -11796105, -11795937, -11795966, -11796259, -11795934, -11795930, -11795929, -11795961, -11796119, -1848049540,2060386421, -11796091, -11796385, -11796104, -11796421, -11796294,1167524310, -11796108, -11795943, -11795931, -11796085, -1848049543, -11796314, -11796345, -11796389, -11796270, -11796123, -11796262, -11796088, -11796315, -11796141, -11796149, -11796082, -11795889, -11795926, -11796305, -11796318, -11796265, -11796411, -11796074, -11796146, -11796273, -11795881, -11796134, -11795925, -11796078, -11796143, -11796125, -11796092, -11796283, -11796124, -11796306, -11796084, -11796388, -11796067, -11796290, -11796406, -11796297, -11796139, -11796337, -11795955, -11796414, -11796341,1167524313, -11796136, -11796308, -11796407, -11795942, -11796303,1167524311, -11795938, -11796319, -11796148, -11796089, -11796097, -11796340, -11796338, -11796095, -11796109, -11795888, -11796132, -11796106, -11796100, -11796073, -11796343, -11796397, -11796353,1167524312, -11796325, -11796131, -11796116, -11795927, -11796137, -11796365, -11796113, -11796029, -11796099, -11795932, -11796118, -11796103, -11796111, -11795969, -11796070, -11796291, -11795883, -11796384, -11795885, -11796133, -11795941, -11796080, -11795940, -11796144, -11796079, -11795939, -11796316, -11795965, -11796253, -11796402, -11796289, -11796098, -11796254, -11796066, -11796298, -11796420, -11796263, -11795949, -11795946, -11796102, -11796122, -11795971, -11796346, -11796121, -11796258, -11795887, -11796304, -11796323, -11796072,2060386419, -11796101, -11795957, -11796275, -11796264, -11796075, -11796279, -11796129, -11796094, -11795956,1167524315, -11796068, -11795960, -11796295, -11795933, -11795918, -11796382, -11796020, -11795962, -11796087, -11795967, -11795959, -11795952, -11796351, -11796261, -11796271, -11796307, -11796269, -11796138, -11796386, -11796140, -11795953, -11796252, -11796127,2060386417, -11795923,1167524314, -11796093, -11795886, -11796135, -11796096, -11796317, -11796130, -11796112, -11795948, -11796387, -11796355, -11796077, -11795968, -11796142, -11796120, -11796281, -11796260,2060386418, -11795950, -11796321, -11796339, -11796280, -11796296, -11795963, -11795935, -11796090, -11796352, -11796081,2060386420, -11796417, -11796115, -11796117, -11796069},{ -1987505335, -11796204,1482555571, -11796452, -11796448, -11796202, -11796018, -11796311, -11796076, -11796025, -11796460,34603487, -11796030, -1948974986, -11796299, -11796418, -11796322, -11795977, -11796267, -11796021,2105409563, -11796415, -11796400, -11796293, -11796403, -11796310,1482555567, -11796292, -11796466, -11796054,1482555575, -11796313, -11796320, -11796288, -11796463, -11796412,2105409568, -11796401, -11796419,2105409564, -11796058, -11796454, -11796013, -11796027, -11796421, -11796012, -11796060, -11796214, -11796314,1482555582, -11796270, -11796207,1482555807, -11796088, -11796199,34603254,1482555814, -11796265, -11796287, -11796006, -11796162, -11796425, -11796398, -11796328, -11796283, -11796471, -11796023, -11796211, -11796290,2105409566, -11796457, -11796414, -11796043, -11796034, -11796048,34603258, -11796308, -11796198, -11796446, -11796319, -11796007, -11796278, -11796089, -11796010, -11795978,34603496,1482555577, -11796132, -11796046, -11796015, -2089680819, -11796039, -11796041, -11796026, -11796276, -11796131,34603255, -11796295,34603494, -11796169, -11796036, -11795991, -11796453, -11796029, -11796205, -11796286, -11796045,1482555572, -11795972, -11796133,34603492, -11796445,1482555578, -11796206, -11796316, -11796055, -2089680822, -11796402,1482555573, -11796300, -11796451, -11796298, -11796274, -11796284, -11796307, -11796291,1482555579, -11796281, -11796289, -11796417, -11796277, -11796305, -11796273, -11796399, -11796262, -11796462, -2089680818,2105409562, -11796302, -11796037,1482555805, -11796410, -11796296, -11796323, -11796271, -11796301, -11796315, -11796032, -11796024, -11796014, -11796003, -11796009, -11796008, -11796280, -11796002, -11796001, -11795993,1482555827,1482555820, -11796266, -11795971, -11796272, -11796312, -11795952, -11796052, -11796017,1482555580, -11796038, -11796297, -11796285, -11796321, -11796279, -11796004,1482555581, -11796019, -11796411, -11796416, -11796040, -11796318, -11796294, -11796263, -11796420, -11796306, -11795976, -11796268, -11796028, -11796309, -11796304, -11796459, -11796275, -11796264,34603256, -11796075, -11796042,34603257,2105409567, -11796035,2105409565, -11796458, -11796020, -11795967, -11796031, -11795963, -11796168, -11796203, -11796413, -2089680821,34603493, -11796269, -1948974984, -11796077, -11796449, -2089680817, -11796317, -2089680820, -11796456, -11796220, -11796465, -11796450, -11796461,2105409561, -11796016,34603495, -11796049, -11796455, -11796467,34603259, -11796200, -11796090,1482555576, -11796464, -11796447},{1241316521, -11795976, -11796308,1185742898, -11796171, -11795985, -11796163, -11796278, -11796089, -11796196, -11795860, -11796342, -11795978, -11796379, -11795833, -11796311, -11796359, -11795888, -11796268, -11795899, -11796025, -11796073, -11796326, -11796026, -11796299, -11796361, -11795995, -11796353, -11796166, -11795869, -11795977, -11796427, -11796331, -11796192, -11796037, -11795892, -11796295, -11796357, -11796021, -11796300, -11796350, -11796365, -11796193, -11796378, -11796368, -11795831, -11796029, -11796358, -11795861, -11796293, -11796118, -11796387, -11796221, -11795835, -11796335, -11796292, -11795883, -11795972, -11795975, -11795870, -11796362, -11796002, -11796114, -11795880, -11796349, -11795878, -11796188, -11795894, -11796080, -11796216, -11795842, -11796079, -11796354, -11796033, -11796206, -11796364, -11796440, -11796255, -11796301, -11795965, -11796022, -11795964, -11796367, -11796374, -11796277, -11795896, -11796083, -11796254, -11795836, -11796344, -11796348,1185742896, -11796003, -11796019, -11796321, -11796086, -11795891, -11796333, -11795984, -11795966, -11796017, -11796419,1185742890, -11796028, -11796014, -11796296, -11796119, -11796024,1185742887, -11796013, -11796091,1185742889, -11796076, -11796101, -11796366, -11795834, -11796012, -11795845, -11796085, -11795859, -11795849, -11796251, -11796129, -11796214, -11796256, -11796345, -11796052, -11796023, -11796215, -11796020, -11796208, -11796207, -11795897, -11796087, -11796176, -11795967, -11795853, -11796031, -11795963, -11796329, -11796203, -11796351, -11796369, -11796082, -11796009, -11795974, -11796190, -11796287, -11796074, -11796081, -11796088, -11795848, -11796375, -11795886,1185742853, -11796302, -11796261, -11795875, -11795838, -11796170, -11795873, -11796183, -11796051, -11795855, -11796191, -11795895,1185742888, -11796471, -11796309,1185742894, -11796018, -11795854, -11795898, -11795876, -11796220, -11795832, -11795840, -11796050, -11795881, -11796276, -11796046, -11796015, -11796356, -11796297, -11796343, -11796042, -11796016, -11796172,1185742895, -11795994, -11795877, -11796307, -11796312, -11796004, -11796252, -11795973, -11796195, -11796205, -11796352, -11796355, -11796341, -11796310, -11795884, -11795846, -11796363, -11796090, -11796201, -11796464, -11796260, -11795971, -11796334, -11796298},{295816905,1167524520,2093678845, -1855455182,1167524508,1167524494, -53346071,1167524518, -53346073, -1466630133,1167524514,1167524488, -53346198,1167524506, -53346051, -53346035, -53346063,1167524493, -53346061, -473038846,1167524510, -473038842, -53346075,1167524507,1167524486,1167524511,2093678846,1167524502,1167524532, -53346057, -473038640, -1466630127, -53346223, -53346055,1167524487, -53346059, -53346067, -473038641,1167524503,1167524496, -1466630138,2093678763, -53346047, -53346049, -53346037, -53346229, -53346225,1167524500,1167524489, -1466630131,1167524515, -53346045,2105409619,1167524490, -1466630126, -1466630128,2093678847, -1466630129, -53346078,34603672,1167524519, -53346043, -473038844, -53346039, -53346077,2093678843, -473038845, -53346224,1167524505,2093678842,1167524516,1167524504, -1466630132,1167524495,1167524498,1167524533,1167524517,2093678844, -53346053,1167524512, -53346232, -473038843,1167524509, -53346231,1167524501,1167524497, -473038638,1167524492, -53346069, -1466630097, -53346041,1167524499,1167524491,1167524513,2105409825,2105409825,2105409825, -1466630125, -1466630124, -1466630121, -1466630120, -1466630119, -1466630118, -1466630117, -1466630116, -1466630115, -1466630114, -1466630113, -1466630112, -1466630111, -1466630110,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409775,2105409777,2105409779,2105409780,2105409781,2105409991,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409981,2105409846,2105409846,2105409846,2105409846,2105409846,2105409846,2105409948,2105409945,2105409946,2105409947,2105409951,2105409953,2105409954,2105409955,2105409966,2105409967,2105409969,2105409970,2105409971,2105409972,2105409973,2105409975,2105409976,2105409977,2105409978,2105409979,2105409980,2105409873,2105409873,2105409873,2105409873,2105409873},{ -1212213378, -1855454770, -1855454497, -1855454668, -1855454908, -1855455188, -1855454025, -1855454923, -1855454513, -1855454643, -1855454534, -1855454931, -1855454651, -1855454819, -1855454510, -1855454675, -1855454928, -1855454026, -1855455185, -1855453950, -1855455079, -1855453706, -1855454684, -1855454605, -1855455065, -1855454919, -1855454542, -1855453498, -1855454776, -1855455166, -1855455010, -1855454518, -1855454591, -1855454023, -1855453838, -1855454504, -1855453840, -1855454716, -1855455153, -1855453839, -1855454938, -1855454024, -1855454588, -1855455098, -1855454593, -1855454027, -1855455018, -1855453841, -1855455175, -1855454602, -1855454948, -1855454600, -1855454905, -1855454650, -1855454598, -1855454932, -1855454501, -1855454532, -1855454512, -1855454604, -1855454029, -1855454580, -1855454899, -1855454946, -1855454493, -1855454774, -1855454665, -1855455052, -1855454949, -1475867167, -1475867166, -1475868583, -1475868245, -1475868266, -1475868244, -1475868246, -1475867107, -1475868237, -1475867165, -1475867164, -1475867163, -1475868587, -1475869079, -1475869073, -1475869069, -1475869068, -1475869070, -1475869064, -1475869059, -1475868272, -1475869055, -1475869063, -1475867111, -1475867162, -1475867160, -1475867161, -1475867106, -1475867108, -1475868257, -1475868256, -1475868258, -1475868268, -1475869074, -1475869075, -1475867172, -1475867170, -1475867109, -1475868584, -1475868252, -1475868249, -1475868250, -1475868248, -1475868247, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475869078, -1475867095, -1475869072, -1475867156, -1475867155, -1475869071, -1475869067, -1475869065, -1475869066, -1475868255, -1475868254, -1475868253, -1475868267, -1475868582, -1475867157, -1475867159, -1475867158, -1475867105},{ -1817621630, -11796409, -11796448, -11796342, -11796410, -11796145, -11796153, -11796379, -11796311, -11796326, -1541078909, -11796299, -11796140, -11796418, -11796322, -11796331, -11796192, -11796415, -11796368, -1541078902, -11796449, -11796400, -11796431, -11796310, -11796335, -11796363, -11796422, -11796071, -11796324, -11796147, -11796354, -1541078910, -11796364, -11796301, -11796313, -11796320, -11796344, -11796463, -11796412, -1541078891, -11796469, -11796321, -11796086, -11796149, -11796408, -11796229, -11796152, -11796259, -11796305, -11796390, -11796085, -11796345, -11796444, -11796088, -11796141, -11796199, -11796082, -11796411, -11796146, -11796074, -11796425, -11796423, -11796328, -11796084, -11796348, -11796067, -11796461, -11796356, -11796406, -11796447, -11796079, -11796233, -11796414, -11796470, -11796142, -11796367, -11796252, -11796315, -11796424, -11796341, -11796223, -11796201, -11796194, -11796334, -11796319, -11796148, -11796089, -11796371, -11796340, -11796338, -11796076, -11796073, -11796343, -11796439, -11796300, -11796193, -11796155, -11796378, -11796099, -11796468, -11796349, -11796080, -11796157, -11796144, -11796433, -11796316, -11796440, -11796358, -11796419, -11796451, -11796248, -11796083, -11796066, -11796377, -11796302, -11796401, -11796102, -11796445, -11796462, -11796362, -11796360, -11796434, -11796426, -11796347, -11796357, -11796151, -11796325, -11796336, -1541078895, -11796417, -11796456, -11796333, -11796432, -11796359, -1541078904, -11796143, -11796200, -11796438, -11796374, -11796198, -11796346, -11796195, -11796370, -11796154, -11796353, -11796156, -11796150, -11796437, -11796355, -11796139, -11796309, -11796138, -11796107, -11796337, -11796196, -11796242, -11796312, -11796392, -11796361, -11796375, -11796068, -11796314, -11796303, -11796304, -11796081, -11796323, -11796077, -11796450, -11796465, -11796352, -1541078897, -11796332, -11796070, -11796376, -11796069, -11796446, -11796072, -11796365, -11796416, -11796436, -11796318, -11796366, -11796435, -11796100, -11796420, -11796380, -11796101, -11796177, -11796075, -11796429, -11796087, -1541078896, -11796413, -11796430, -11796472, -11796373, -1541078892, -11796327, -11796317, -11796191, -11796330, -1541078903, -11796339, -11796247, -11796467, -11796372, -11796090},{ -1944435120, -11796145, -11796153, -11796359, -11796368, -11796400,2060386350, -11796394, -11796363,2060386346, -1848049507, -11796354, -11796364, -11796149, -11796381, -11796366, -11796389,2060386338, -11796141,2060386323, -11796146, -11796398, -11796143, -11796356, -1848049585, -11796438,2060386324, -11796360, -11796148, -11796391,1167524006,2060386326, -11796353, -1848049505, -11796357, -11796350,2060386325, -11796365, -11796378,1167524450, -11796144,1167523977,1167523992, -11796347,2060386320, -1848049536,2060386344, -11796379, -11796390, -11796404, -11796140, -11796152, -11796383, -1848049586, -11796403, -11796147, -11796157,1167524468,1167524470,1167524066, -11796401,2060386345, -11796385, -1848049506,2060386352, -11796376, -11796388, -11796139,2060386353,1167524647, -11796361, -11796380, -11796358, -1848049510, -11796355, -11796156, -1848049514, -11796138, -11796384, -11796395,1167524057, -11796367, -11796402,1167524648, -11796151, -11796377, -11796387, -11796399, -11796154,2060386327, -11796396,2060386354, -1848049513, -11796351,1167524469, -11796382,1167524447, -11796155, -11796150, -11796369, -11796386, -11796375, -11796392, -11796352,1167524448,1167523932,2060386351, -11796393, -11796362, -11796142,2060386329,2060386305,1167524516,1167524449,1167524486,1167524606,1167524607,1167524608,1167524609,1167524612,1167524613,1167524614,1167524611,1528234068,1528234068,1528234068,1167524886,1167524887,1167524889,1167524890,1167524891,1167524892,1167524883,1167524894,1167524896,1167524803,1167524848,1167524781,1167524839,1167524849,1167524840,1167524788,1167524842,1167524797,1167524789,1167524792,1167524802,1167524798,1167524832,1167524509,1167524471,34603170,1167524511,1167524056,1167524510,1167524851,1167524854,1167524855,1167524856,1167524858,1167524861,1167524862,1167524865,1167524866,1167524868,1167524869,1167524870,1167524871,1167524872,1167524857},{1147491976, -11796198, -11796110, -11796395, -11796342, -11796340, -11796338, -11796109, -11796311, -11796100, -11796343, -11796326, -11796197, -11796353, -11796322, -11796331, -11796192, -11796196, -11796312, -11796352, -11796099, -11796108, -11796301, -11796394, -11796335, -11796389, -11796362, -11796399, -11796344, -11796349, -11796188, -11796354, -11796316, -11796336, -11796193, -11796320, -11796350, -11796248, -11796348, -11796242, -11796346, -11796229, -11796106, -11796361, -11796274, -11796314, -11796315, -11796200, -11796310, -11796319, -11796321, -11796189, -11796105, -11796194, -11796333, -11796397, -11796332, -11796259, -11796324, -11796195, -11796396, -11796317, -11796328, -11796103, -11796313, -11796318, -11796102, -11796355, -11796308, -11796323, -11796107, -11796104, -11796101, -11796233, -11796345, -11796329, -11796347, -11796199, -11796190, -11796392, -11796327, -11796398, -11796191, -11796393, -11796339, -11796337, -11796247, -11796252, -11796341, -11796223, -11796201, -1765408696, -1765408697,1926758635,1926758636,1926758633, -11796429, -11796428, -11796427, -11796426, -11796425, -11796424, -11796423, -11796422, -11796421, -11796420, -1765408694, -1765408692, -1765408693, -11796436, -11796435, -11796434, -11796414, -11796413, -11796412, -11796452, -11796451, -11796450, -11796410, -11796409, -11796408, -11796406, -11796405, -11796404, -11796402, -11796401, -11796400, -11796418, -11796417, -11796416,2060386331,2060386332,2060386333,2060386414,2060386415,2060386416, -1765408736, -1765408732, -1765408731, -1765408730, -1765408729, -1765408728, -1765408727, -1765408726, -1765408725, -1765408724, -1765408723, -1765408722, -1765408721, -1765408720, -1765408719, -1765408718, -1765408717, -1765408716, -1765408715, -1765408714, -1765408713, -1765408712, -1765408711, -1765408710, -1765408705, -1765408699, -1765408698,1926758637,1926758638,1926758639, -11796474, -11796473, -11796472, -11796471, -11796470, -11796469, -11796468},{1597085778, -11796308, -11796303, -1948974520, -11796282, -11796268, -11796271, -11796299, -11796276, -1948974505, -11796274, -11796300, -1948974508, -11796286, -11796291, -11796292, -11796277, -1948974507, -1948974518, -11796289, -11796298, -11796288, -1948974504, -11796285, -1948974522, -11796304, -11796301, -11796294, -11796275, -11796279, -11796270, -11796307, -11796269, -11796305, -1948974509, -1948974521, -11796273, -1948974517, -11796283, -11796278, -11796293, -11796284, -11796302, -11796281, -11796290, -11796267, -11796295, -11796297, -1948974506, -11796280, -11796296, -1948974519, -11796272,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365, -11796370, -11796369, -11796368, -11796367, -11796366, -11796365, -11796364, -11796400, -11796399, -11796398, -11796397, -11796396, -11796395, -11796394, -11796415, -11796414, -11796413, -11796412, -11796411, -11796410, -11796409, -11796432, -11796431, -11796430, -11796429, -11796428, -11796427, -11796426, -11796467, -11796465, -11796463, -11796461, -11796449, -11796448, -11796447, -11796445, -11796444, -11796443, -11796442, -11796441, -11796440, -11796439, -11796438, -11796437, -11796436, -11796435, -11796434, -11796384, -11796383, -11796382, -11796381, -11796380, -11796379, -11796378, -11796377, -11796376, -11796375, -11796374, -11796373, -11796355, -11796354, -11796353, -11796352, -11796351, -11796350, -11796349, -11796348, -11796347, -11796346, -11796345, -11796344, -11796362, -11796361, -11796360, -11796359, -11796358, -11796357, -11796356, -11796391, -11796390, -11796389, -11796388, -11796387, -11796386, -11796385, -11796407, -11796406, -11796405, -11796404, -11796403, -11796402, -11796401, -11796424, -11796423, -11796422, -11796421, -11796420, -11796419, -11796418},{ -136010643, -11796476, -1948975068, -1948975081, -1948975049, -1948975083, -1948975044, -1948975091, -1948975033, -1948975048, -1948975046, -1948975080, -1948975074, -1948975037, -1948975082, -1948975078, -1948975079, -1948975077, -1948975073, -1948975047, -1948975051, -1948975034, -1948975042, -11796478, -1948975090, -1948975066, -1765408760, -1948975063, -11796477, -1948975032, -1948975043, -1948975035, -1948975076, -1765408763, -1948975041, -1948975072, -1948975040, -1948975038, -1948975052, -1948975084, -1948975039, -1948975036, -1948975045, -1765408759,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365,2060386365, -11796370, -11796369, -11796368, -11796367, -11796366, -11796365, -11796364, -11796400, -11796399, -11796398, -11796397, -11796396, -11796395, -11796394, -11796415, -11796414, -11796413, -11796412, -11796411, -11796410, -11796409, -11796432, -11796431, -11796430, -11796429, -11796428, -11796427, -11796426, -11796467, -11796465, -11796463, -11796461, -11796449, -11796448, -11796447, -11796445, -11796444, -11796443, -11796442, -11796441, -11796440, -11796439, -11796438, -11796437, -11796436, -11796435, -11796434, -11796384, -11796383, -11796382, -11796381, -11796380, -11796379, -11796378, -11796377, -11796376, -11796375, -11796374, -11796373, -11796355, -11796354, -11796353, -11796352, -11796351, -11796350, -11796349, -11796348, -11796347, -11796346, -11796345, -11796344, -11796362, -11796361, -11796360, -11796359, -11796358, -11796357, -11796356, -11796391, -11796390, -11796389, -11796388, -11796387, -11796386, -11796385, -11796407, -11796406, -11796405, -11796404, -11796403, -11796402, -11796401, -11796424, -11796423, -11796422, -11796421, -11796420, -11796419, -11796418},{ -1644045427, -11796342, -11796311, -11796076, -11796299, -11796322, -11796274, -11796272, -11796310, -11796335, -11796324, -11796301, -11796313, -11796344, -11796294, -11796314, -11796270, -11796315, -11796305, -11796318, -11796287, -11796273, -11796283, -11796306, -11796297, -11796337, -11796341, -11796308, -11796303, -11796319, -11796338, -11796343, -11796276, -11796295, -11796286, -11796080, -11796079, -11796316, -11796277, -11796302, -11796285, -11796336, -11796309, -11796304, -11796323, -11796284, -11796075, -11796279, -11796298, -11796278, -11796282, -11796340, -11796271, -11796300, -11796081, -11796077, -11796296, -11796317, -11796281, -11796320, -11796307, -11796312, -11796339, -11796280, -11796275, -11796433, -11796432, -11796443, -11796441, -11796439, -11796442, -11796440, -11796438, -11796437,2060386339,2060386344,2060386332,2060386355,2060386338,2060386329,2060386328,2060386333,2060386330,2060386334,2060386347,2060386348, -11796429, -11796428, -11796427, -11796426, -11796425, -11796424, -11796423, -11796422, -11796421, -11796420, -11796419, -11796418, -11796456, -11796455, -11796454, -11796453, -11796452, -11796451, -11796450, -11796449, -11796448, -11796447, -11796446, -11796445, -11796408, -11796400, -11796399, -11796398, -11796397, -11796396, -11796395, -11796469, -11796468, -11796467, -11796466, -11796465, -11796464, -11796463, -11796462, -11796461, -11796460, -11796459, -11796458, -11796416, -11796415, -11796414, -11796413, -11796412, -11796411, -11796410, -1765407649, -1765407648, -1765407647, -1765407645, -1765407644, -1765407643, -1765407642, -1765407641, -1765407640, -1765407639, -1765407638, -1765407637, -1765407636, -1765407635, -1765407634, -1765407632, -1765407631, -1765407630, -11796403, -11796405, -11796404, -11796402, -11796407, -11796401, -11796406},{170656205, -11795976, -11796171, -11796056, -11796166, -11795977, -11795954, -11795958, -11796257, -11796071, -11796160, -11796083, -11796159, -11796259, -11795961, -11796047, -11796174, -11796175, -11796305, -11796167, -11795951, -11796306, -1848049380, -11795955, -11796057, -11796043, -11796048, -11796308, -11796164, -11796161, -11795956, -11796073, -11796039, -11796041, -11796172, -11796037, -11796169, -11796061, -11795964, -11796080, -11796055, -11795965, -11796165, -11796036, -11796044, -11796059, -11796045, -11796084, -11796040, -11796258, -11796304, -11795970, -11796072, -11795957, -11796035, -11796173, -11795962, -11795959, -11795952, -11795953, -11796262, -11796260, -11795950, -11796307, -11795968, -11796162, -11796112, -11795974, -11796049, -11795971, -11796069, -1765407641, -11796455, -11796346, -11796345, -11796342, -11796337, -11796335, -11796331, -11796330, -11796328, -11796320, -11796319, -11796318, -11796317, -11796314, -11796313, -11796312, -11796311, -11796310, -11796254, -11796253, -11796252, -11796251, -11796250, -11796248, -11796247, -11796246, -11796245, -11796244, -11796243, -11796241, -11796240, -11796239, -11796238, -11796237, -11796236, -11796223, -11796222, -11796221, -11796220, -11796219, -11796218, -11796216, -11796215, -11796214, -11796213, -11796212, -11796211, -11796209, -11796208, -11796207, -11796206, -11796205, -11796204, -11796202, -11796201, -11796200, -11796199, -11796198, -11796196, -11796195, -11796194, -11796193, -11796192, -11796191, -11796189, -11796188, -11796187, -11796186, -11796185, -11796184, -11796182, -11796181, -11796180, -11796179, -11796178, -11796177, -11796026, -11796025, -11796024, -11796023, -11796022, -11796021},{1649439303, -11795904, -11795924, -11795902, -11795901, -11795928,486,2093678728, -11795997, -11795943, -1541078220, -11795994, -11795981,479, -1541078214, -11795892,405405802, -11795972, -11796002,2093678985, -1541078419, -11795910, -11796003, -11795900, -11795970, -11795933,2093679137, -1541078734, -11795968,2093678984, -11795998, -11795950, -1541078733, -11795922, -11795912, -11795899, -11795921,2093678920, -11795995, -11795977,2093679133,2105409868,2105409869,2093678842,405405804, -1541078872, -11795941,405405805, -1541078215,2093679134,2093679135, -11795980, -11795908,2105409867, -11795934, -1541078874, -11795930, -11795929,2093678921, -1541078864, -11795909,2093678983, -11795919, -1541078213, -11795979, -11795907, -11795954, -11795916, -11796046, -11795949, -11795939, -11795936, -11795937, -11795920, -11795925, -1541078226, -11795923, -11796081, -11795975, -11795999, -11796085, -11796029, -11795971, -11795918, -11795896, -11795973, -11795906, -11795905, -11796006, -11795931, -11795969, -11796000, -11795911, -11795947, -11795927, -11795895, -11795893, -11795894, -11795926, -11795946, -11795942, -11795974, -11796045, -11795945,405405806, -11795951, -1541078871, -11795898, -11795996, -11795938,482, -11795978, -11795888,2093678778, -11796004, -11795903,2093678982,405405803, -11795940, -11795917,2093678721, -11795913, -11795915, -11795897, -11795952,405405801, -1541078731, -11795953, -1541078219, -11795948,2093678986, -11796420, -11796454, -11796421, -11796406, -11796405, -11796404,1926758753,1926758766, -11796332, -11796258, -11796240, -11796239, -11796238},{ -2115418256, -11796360,2060386366, -11796409,2060386374,2060386432,2060386364,2060386361, -11796470,2060386413,2060386344, -11796311, -11796359,2060386331, -11796268, -11796460,2060386343, -11796424,2060386341, -11796404, -11796266,2060386340,2060386424,2060386359, -11796267,2060386433, -11796357, -11796312,2060386325, -11796415, -11796400,2060386336, -11796355, -11796466,2060386346, -11796422,2060386337, -11796257,2060386371,2060386423,2060386373,2060386422, -11796465, -11796316, -11796255,2060386332, -11796253, -11796402,2060386363, -11796254, -11796462,2060386410, -11796463, -11796420, -11796412, -11796401, -11796461,2060386345, -11796256, -11796469,2060386372,2060386414, -11796259,2060386415, -11796419,2060386334,2060386431,2060386368,2060386339,2060386375,2060386365, -11796356, -11796459, -11796258, -11796408,2060386429,2060386342, -11796421,2060386333,2060386369,2060386426, -11796264,2060386378,2060386412, -11796398, -11796314,2060386430,2060386327, -11796262, -11796315, -11796269, -11796265, -11796411,2060386417, -11796425,2060386427, -11796458,2060386335, -11796423, -11796406, -11796399, -11796261, -11796416, -11796413, -11796358,2060386367,2060386425,2060386324,2060386428,2060386328,2060386338, -11796251, -11796317, -11796410, -11796313, -11796403,2060386377, -11796260,2060386362,2060386411, -11796457,2060386323,2060386370,2060386416, -11796468,2060386326, -11796407, -11796263, -11796405,2060386360, -11796414,2060386376, -11796467, -11796252,2060386379, -11796250,2060386329, -11796417, -11796464,2060386418},{312004957,2060386366, -11796409, -11796416,1167523884, -11796148, -11796150,2060386357, -11796089,2060386362, -11796448, -11796391, -11796395, -11796145, -11796153, -11796076, -11796073, -11796460, -11796390, -11796397, -11796140,2060386340,2060386365,2060386359,34603041, -11796426, -11796383, -11796415, -11796453, -11796433, -11796155, -11796449, -11796400, -11796399, -11796431, -11796387, -11796394,1167523885, -11796070, -11796466, -11796384, -11796422, -11796475, -11796080, -11796071,1167523880, -11796144, -11796079, -11796147, -11796465, -11796157, -11796451, -11796083, -11796462, -11796463, -11796420,2060386352, -11796401, -11796461, -11796469, -11796086,2060386322, -11796149, -11796154, -11796396, -11796454,2060386354, -11796468,2060386328,2060386321, -11796385, -11796459, -11796072, -11796474,2060386333, -11796075,34603042, -11796429, -11796085, -11796068, -11796389, -11796382, -11796458, -11796087,2060386358, -11796138,2060386318, -11796088, -11796141, -11796430, -11796472, -11796082,2060386315,1167523879, -11796386, -11796074, -11796081, -11796392, -11796398, -11796143, -11796476,2060386314,2060386307,34603039, -11796151, -11796432, -11796084, -11796388, -11796152, -11796067,2060386339,2060386356,1167523878,2060386316,2060386355,2060386332,2060386331, -11796427, -11796156,2060386320, -11796146, -11796139, -11796142,2060386338,2060386319, -11796361,2060386353,2060386360,2060386317, -11796455, -11796467, -11796066, -11796077,2060386306, -11796473,2060386329, -11796090, -11796464, -11796069},{2050064391, -11796308, -11796476, -11796416, -11796452, -11796443, -11796448,2093678914, -11796470, -11796432,2093678954, -11796468, -11796460, -11796326,2093678716,2093678718, -11796424,2093678849, -11796439, -11796418,2093678939, -11796427, -11796295, -11796426, -11796300, -11796453,2093678916, -11796449, -11796478, -11796431,2093678837, -11796466,2093678918,2093679072, -11796445, -11796475, -11796465, -11796255, -11796301,2093678917, -11796277, -11796451,2093678846,2093679079, -11796254, -11796463, -11796420,2093678941, -11796461, -11796256, -11796469, -11796321,2093678913,2093679084,2093678864,2093678963, -11796454, -11796459, -11796446, -11796474, -11796421,2093678949,2093679088,2093678965, -11796440, -11796429,2093678964, -11796251,2093678707,2093678950, -11796444, -11796430,2093678935,2093678962, -11796287,2093679090, -11796457,2093678850,2093678871,2093678937,2093678938,2093678955, -11796425,2093678915, -11796302, -11796423, -11796261, -11796435, -11796441,2093678822,2093678727, -11796419,2093678966, -11796456, -11796296, -11796471, -11796442, -11796473, -11796422,2093678940, -11796260,2093679070,2093678919, -11796472, -11796436,2093679078,2093679092,2093679074,2093678847,2093678952, -11796477, -11796297,2093678961,2093678960, -11796299, -11796447, -11796428,2093679094,2093678951,2093678953, -11796455, -11796450,2093678741, -11796467,2093679068, -11796252, -11796438, -11796462, -11796298,2093678936, -11796433,2093679069, -11796417, -11796464,2093679091},{ -1050035699, -11796476, -11796448, -11796145, -11796282, -11796153, -11796379, -11796311, -11796390, -11796326,1293287554, -11796140,1293287690, -1541078828, -11796152, -11796331, -11796325, -11796400, -11796293, -11796387, -11796394, -11796310, -11796292, -11796475, -1855455135, -11796442, -11796147, -11796332, -11796157, -11796313, -11796288, -11796401, -11796469, -1541078829, -11796149, -11796381,2060386333, -11796294, -11796389, -11796329, -11796141, -11796411, -11796287, -11796146, -11796143, -11796328, -11796283, -11796471, -11796473, -11796306,1293287528, -11796388, -11796290, -11796406, -11796297, -11796447, -11796457, -11796414, -11796407, -11796303, -11796416, -11796148, -11796278, -11796443, -1855455057, -11796470, -11796391, -11796441,1293287720, -11796468, -1541078827,1293287523, -11796312, -11796380,2060386325, -11796155, -11796378, -11796156, -11796291, -11796384, -11796281,2060386308, -11796144, -11796440,1293287530, -11796289, -11796462, -11796302, -1855455046, -11796285, -11796154, -11796309,1293287689, -11796304,2060386321, -11796474,2060386322, -11796279, -11796139, -11796465, -11796150, -11796382,1293287531, -11796472, -11796386, -11796327, -11796466, -11796445, -11796456, -1172111224, -11796142, -11796284, -11796151, -11796307,2060386307, -11796295, -11796385, -1541078826, -11796280, -11796286, -11796393, -11796314,2060386334, -11796138, -11796305, -11796308,2060386310, -11796467, -11796296, -11796437, -1172111187, -1172111219, -11796464},{2060214456, -11796299,2060386476,2060386486,2060386485,2060386391,2060386487,2060386478,2060386338,2060386442,2060386484,2060386369,2060386360,2060386376,1674052671,2060386474,2060386362,2060386464,2060386468,2060386365,2060386359, -11796378,2060386403,2060386371,2060386423,2060386401,2060386435,2060386368,2060386483,2060386358,2060386370,2060386335,2060386448,2060386428,1926758854,2060386364, -11796379,2060386475,1674052665,2060386363,2060386470,2060386466,2060386471,2060386415,2060386446,2060386444,2060386462,2060386452, -11796305,2060386377,2060386353,2060386366,2060386432, -11796371,2060386347,2060386472, -11796300,2060386436,2060386465,2060386445,2060386454, -11796374,2060386441, -11796377,2060386447,2060386372,2060386469, -11796301,2060386429,2060386380,2060386463,2060386450,2060386395,2060386389, -11796373,2060386417, -11796375, -11796392,2060386374,2060386451,2060386477, -11796372,2060386375,2060386453,2093678875,2093678983,2093678983,2093678983,2093678983,2093678862,2093678862,2093678862,2093678862,2093678940,2093678940,2093678940,2093678940,2093678927,2093678927,2093678888,2093678888,2093678888,2093678888,2093678888,2093678888,2093678888,2093678888,2093678888,2093678888,2093678849,2093678849,2093678849,2093678849,2093678953,2093678953,2093678953,2093678953},{507487826,2060386357,2060386364,2060386344, -11796076,2060386341,2060386350,2060386337, -11796071,2060386311,2060386319,498,2060386391,1167524689,1167524691,2060386378, -11796085, -11796207,2060386314,2060386338,2060386312, -11796088,2060386315, -11796074,2060386367,500,2060386307,2060386377,2060386353,2060386360,2060386376,2060386379,2060386348, -11796089,2060386362,2060386361,2060386331,2060386316,2060386326,2060386343,2060386340,2060386365,2060386359,2060386383,2060386347,2060386325,2060386355,2060386336, -11796070,2060386308, -11796080,2060386371, -11796079,1167524690, -11796206,2060386332, -11796066,2060386384,2060386372,2060386322,2060386309,2060386368,2060386375,2060386354,2060386321, -11796072, -11796209, -11796075, -11796073,2060386366, -11796068,2060386363, -11796208, -11796087, -11796067,2060386327,2060386334,2060386381, -11796077,2060386370, -11796081,2060386358,499,2060386335,2060386306,2060386385,2060386324,2060386318,2060386328,2060386356,2060386369,2060386330,2060386313,2060386323,2060386382,2060386374,2060386320,2060386310,2060386342,2060386351,2060386317,2060386329, -11796090, -11796069, -11796175, -11796174, -11796173, -11796172, -11796171, -11796170, -11796169, -11796168, -11796167, -11796166, -11796165, -11796164},{ -1900248111, -1138884564, -1138884560, -1138884603, -1948974517, -1138884584, -1138884527, -1138884491, -1138884533, -1138884528, -1138884572,34603495, -1138884591, -1948974608, -1138884585, -1138884578, -1138884531, -1138884592, -1948974607, -1948974516, -1948974519, -1138884582, -1948974611, -1948974609, -1948974520, -1948974612, -1948974515, -1138884555, -1138884589, -1138884567, -1138884583, -1138884581,34603487, -1138884546,34603494, -1948974610, -1138884526, -1138884565, -1138884598, -1138884569, -1138884571, -1138884538, -1138884548, -1138884550, -1138884568, -1138884525, -1138884559, -1138884537, -1138884553, -1138884570, -1138884574, -1138884541, -1138884552, -1138884577, -1138884586, -1138884530, -1138884587, -1138884562, -1138884594, -1138884595, -1138884604, -1138884539, -1138884602, -1138884532, -1138884529, -1138884549, -1138884596, -1138884599, -1138884545, -1138884605, -1138884551, -1138884580, -1138884544, -1138884542,34603492, -1138884563, -1138884554, -1138884489, -1138884597, -1138884540, -1138884575, -1138884601, -1138884600, -1138884588, -1138884576, -1138884535, -1138884561, -1138884566, -1138884556, -1138884557,34603493, -1138884547, -1138884543, -1138884593, -1138884536, -1138884590, -1138884534, -1138884558, -1948974518, -1138884579},{748712866,2093679187, -11796145, -11796153, -11796140, -11796152,2093679055,2093679129,2093679093,2093679106, -11796147,2093679107,2093679180,2093679120, -11796149,2093679087, -11796141, -2015297144, -11796146,2093679098,2093679096,2093679075, -2015297143,2093679054, -11796139,2093679094,2093679060,2093679202, -11796148, -11796150,2093679067, -2015297146,2093679127,2093679126,2093678823,2093678826,2093678889,2093678895,2093679058,2093679097,2093679112,2093679113,2093679117,2093679131,2093679083,2093679073,2093678929,2093679077,2093679057,2093679115,2093679133, -2015297148, -11796155, -11796156,2093679132,2093679092,2093679104,2093679006,2093679121,2093679089,2093679086,2093679059,2093679110,2093679090,2093679108,2093678831, -2015297150,2093679056,2093679081,2093679099,2093679111, -11796144,2093679088,2093679076,2093679103, -2015297147,2093678818,2093679095,2093679079, -2015297145, -11796417, -11796154,2093679194,2093679085, -2015297149,2093679105,2093679114, -11796138, -11796151,2093679109, -11796142,2093679118, -11796143,2093679078,2093679125,2093679116,2093679080,2093679130,2093679091},{ -1574275404, -11796145, -11796153, -11796149, -11796287, -11796143, -11796283, -11796297, -11796150, -11796278, -11796155, -11796144, -11796289, -11796285, -1627586479, -11796140, -11796152, -11796157, -11796288, -1855452427, -11796151, -11796139, -11796290, -11796295, -11796286, -11796156, -11796281, -11796282, -11796291, -1855452431, -11796293, -11796154, -11796292, -11796141, -11796147, -11796294, -11796138, -11796146, -11796284, -11796142, -11796148, -11796280, -11796296, -11796279, -11796327, -11796326, -11796325, -11796324, -11796323, -11796322, -11796321, -11796380, -11796379, -11796378, -11796377, -11796363, -11796362, -11796361, -11796343, -11796342, -11796341, -11796340, -11796339, -11796338, -11796337, -11796351, -11796350, -11796349, -11796348, -11796347, -11796346, -11796345, -11796388, -11796387, -11796386, -11796385, -11796384, -11796383, -11796382, -11796411, -11796410, -11796409, -11796408, -11796400, -11796399, -11796398, -11796396, -11796395, -11796394, -11796393, -11796392, -11796391, -11796390, -11796359, -11796358, -11796357, -11796356, -11796355, -11796354, -11796353},{817373972, -11796443, -11796470, -11796432, -11796441, -11796468, -11796439, -11796418, -11796353, -11796365, -11796433, -11796451, -11796400, -11796431, -11796406, -11796454, -11796434, -11796442, -11796465, -11796440, -11796367,498,499, -11796462, -11796463, -11796461, -11796469, -11796473, -11796364,500, -11796474, -11796445, -11796472, -11796460, -11796428, -11796427, -11796437, -11796426, -11796357, -11796363, -11796457, -11796471, -11796456, -11796459, -11796449, -11796450, -11796466, -11796354, -11796368, -11796429, -11796452, -11796438, -11796444, -11796453, -11796366, -11796435, -11796455, -11796458, -11796355, -11796430, -11796425, -11796352, -11796436, -11796356, -11796467, -11796464, -11796175, -11796174, -11796173, -11796172, -11796171, -11796170, -11796169, -11796168, -11796167, -11796166, -11796165, -11796164},{2518601, -11796308, -11796435, -11796303, -11796319, -11796443, -11796391, -11796395, -11796390, -11796424, -11796397, -11796299, -11796439, -11796386, -11796312, -11796427, -11796389, -11796426, -11796383, -11796300, -11796380, -11796378, -11796400, -11796431, -11796387, -11796422, -11796445, -11796428, -11796442, -11796440, -11796367, -11796374, -11796302, -11796321, -11796393, -11796396, -11796385, -11796317, -11796375, -11796392, -11796369, -11796371, -11796368, -11796377, -11796379, -11796381, -11796311, -11796309, -11796384, -11796316, -11796306, -11796305, -11796304, -11796310, -11796398, -11796298, -11796366, -11796430, -11796429, -11796432, -11796314, -11796437, -11796444, -11796318, -11796373, -11796441, -11796425, -11796423, -11796436, -11796421, -11796297, -11796296, -11796438, -11796372, -11796434},{ -161371567, -11796071, -11796083, -11796086, -11796088, -11796082, -11796084, -11796067, -11796089, -11796073, -11796070, -11796080, -11796066, -11796072, -11796075, -11796068, -11796076, -11796087, -11796079, -11796081, -11796085, -11796069, -11796074, -11796077, -11796090, -1541078482, -1541078482, -1541078482, -1541078482, -1541078501, -1541078489, -1541077972, -1541077972, -1541077972, -1541077972, -1541077979, -1541077979, -1541077979, -1541077979, -1541078593, -1541078582, -1541078589, -1541078590, -1541078548, -1541078525, -1541078524, -1541077989, -1541077988, -1541077987, -1541077986, -1541077985, -1541077984, -1541077983, -1541077965, -1541077965, -1541077965, -1541077965},{ -977706424,2060386357,2060386364,2060386350,2060386349,2060386346,2060386337,2060386311,2060386363,2060386319,2060386345,2060386328,2060386360,2060386333,2060386331,2060386370,2060386330,2060386338,2060386352,2060386312,2060386318,2060386313,2060386369,2060386367,2060386376,2060386324,2060386366,2060386336,2060386374,2060386348,2060386362,2060386361,2060386326,2060386343,2060386340,2060386325,2060386355,2060386372,2060386322,2060386334,2060386368,2060386339,2060386375,2060386354,2060386342,2060386327,2060386332,2060386373,2060386356,2060386320,2060386310,2060386321,2060386358,2060386314,2060386344,2060386351},{1887730855, -11795976, -11796460, -11795977, -11796478, -11796466, -11796475,1293289203, -11796465,1293288535,1293289206, -11796119, -11795974,1293288897, -11796471,1293288554, -11796470, -11795978, -11795971, -11796129,1293289269, -11796118, -11795972, -11796002, -11796046,1293288900, -11796474, -11796472, -11796469, -11796114, -11796473, -11795973, -11795964, -11796476, -11796467, -11796461, -11796468, -11796459, -11795975, -11795966, -11796477, -11796463, -11795965, -11796462,1293289266, -11796042,1293288484, -11795967, -11795963,1293288481,1293288546,2093678694,1293287987,1293288176, -11796464,1293288469},{ -768833570, -11796476, -11796449, -11796400,2060386349,2060386486,2060386388,2060386485, -11796412,2060386390,2060386306,2060386468,2060386355,2060386488,2060386504, -11796434,2060386387,2060386356,2060386475, -11796390, -114950141, -1765408587, -11796408,405405705,2060386353,2060386489,2060386348,2060386347,1185742864, -11796395, -11796451,2060386389,2060386474,405405704, -11796436,2060386305,2060386307, -881917928, -881917923, -881917922,2105410001,2105410001,2105409997,2105409989,2105409985,2105409993, -11796258, -11796240, -11796239, -11796238},{1323747701, -1541078874, -1855454159, -1541078872,1482555820,1482555807, -1855455008, -1855454409, -1541078871, -1475867566, -809369585, -809369583, -809369573, -809369578, -1475870010, -1475866992, -1475867021, -1475866924, -1475870494, -1475866937, -1475869652, -1475869444, -1475869521, -1475869696, -1475869752, -1475868325, -1475867681, -1475866982, -1475867822, -1475869597, -1475869357, -1475869983, -1475869190, -1475869856, -1475866911, -1475867002, -1475867811, -1475867586, -1475869320, -1475866894, -1475869221, -1475870154, -1475867807, -1475867568, -1475869663},{ -1934656620, -11796476, -11796395, -11796379, -11796311, -11796359, -11796390, -11796383, -11796415, -11796400, -11796478, -11796387, -11796475, -11796313, -11796385, -11796381, -11796389, -11796398, -11796388, -11796356, -11796414, -11796360, -11796416, -11796391, -11796397, -11796357, -11796312, -11796380, -11796378, -11796384, -11796386, -11796377, -11796401, -11796479, -11796396, -11796355, -11796358, -11796413, -11796316, -11796375, -11796477, -11796315, -11796317, -11796382, -11796392, -11796374, -11796314, -11796376, -11796399,1482555782, -11796393},{ -410824576, -11796476, -11795978, -11796046, -11795977, -11796478, -11796118, -11795972, -11795975, -11796002, -11796114, -11796465, -11795965, -11795964,2093679120, -11796463, -11796461,2093679119, -11796469, -11795966, -11796119, -11796474, -11796042, -11796129, -11795963, -11796462, -11796472, -11795967, -11795973,2093679121, -11796477, -11796470, -11796468, -11796466, -11796471,2093679118, -11796460, -11796475, -11795974, -11796473, -11796459, -11795971, -11795976,2093679117, -11796467,2093679116, -11796464},{567986524, -587661257, -587661296, -587661241, -587661298, -587661282, -587661258, -587661244, -587661234, -587661267, -587661305, -587661272, -587661273, -587661307, -587661302, -587661300, -587661290, -587661281, -587661270, -587661287, -587661268, -587661239, -587661280, -587661285, -587661240, -587661278, -587661277, -587661266, -587661274, -587661297, -587661259, -587661255, -587661289, -587661251, -587661250, -587661249, -587661232, -587661310, -587661304, -587661237, -587661230, -587661242, -587661236, -587661233, -587661261, -587661264, -587661291, -587661260, -587661301, -587661235, -587661269, -587661231, -587661299, -587661292, -587661284, -587661288, -587661254, -587661238, -587661309, -587661276, -587661286, -587661283, -587661246, -587661306, -587661245, -587661295, -587661253, -587661294, -587661247, -587661263, -587661229, -587661252, -587661262, -587661265, -587661256, -587661271, -587661243, -587661279, -587661248, -587661275, -587661303,1167523919,1167523922,1167523920,1167523917,1167523899,1167523898,1167523902,1167523904,1167523906,1167523905,1167523924,1167523923,1167523882,1167523879,1167523874,1167523873,1167523864,1167523928,1167523932,1167523934,1167523938,1167523941,1167523946,1167523947,1167523952,1167523955,1167523959,1167523961,1167523965,1167523968,1167523973,1167523974,1167523979,1167523982,1167523986,1167523988,1167523992,1167523995,1167524000,1167524001,1167524006,1167524009,1167524013,1167524015,1167524018,1167524022,1167524024,1167524028,1167524032,1167524036,1167524037,1167524040,1167524046,1167524050,1167523893,1167524054,1167524057,1167524062,1167524063,1167524068,1167524071,1167524075,1167524077,1167524082,1167524085,1167524087,1167524091,1167524094,1167524099,1167524100,1167524105,1167524108,2105409846,2105409948,2105409945,2105409946,2105409947,2105409951,2105409953,2105409954,2105409955,2105409966,2105409967,2105409969,2105409970,2105409971,2105409972,2105409973,2105409975,2105409976,2105409977,2105409978,2105409979,2105409980,2105409873,2105409873,2105409873,2105409873,2105409873},{1705189686,1674051595,1674051597,1674051596,1674051598,1674051593,1674051592,1674051594,1674051600,1674051599,1167523919,1167523922,1167523920,1167523917,1167523899,1167523898,1167523902,1167523904,1167523906,1167523905,1167523924,1167523923,1167523882,1167523879,1167523874,1167523873,1167523864,1167523928,1167523932,1167523934,1167523938,1167523941,1167523946,1167523947,1167523952,1167523955,1167523959,1167523961,1167523965,1167523968,1167523973,1167523974,1167523979,1167523982,1167523986,1167523988,1167523992,1167523995,1167524000,1167524001,1167524006,1167524009,1167524013,1167524015,1167524018,1167524022,1167524024,1167524028,1167524032,1167524036,1167524037,1167524040,1167524046,1167524050,1167523893,1167524054,1167524057,1167524062,1167524063,1167524068,1167524071,1167524075,1167524077,1167524082,1167524085,1167524087,1167524091,1167524094,1167524099,1167524100,1167524105,1167524108,2105409846,2105409948,2105409945,2105409946,2105409947,2105409951,2105409953,2105409954,2105409955,2105409966,2105409967,2105409969,2105409970,2105409971,2105409972,2105409973,2105409975,2105409976,2105409977,2105409978,2105409979,2105409980,2105409873,2105409873,2105409873,2105409873,2105409873},{ -1184245578, -1765408541, -11796474,405405709, -11796464,2105409825,2105409825,2105409825, -1466630125, -1466630124, -1466630121, -1466630120, -1466630119, -1466630118, -1466630117, -1466630116, -1466630115, -1466630114, -1466630113, -1466630112, -1466630111, -1466630110,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409855,2105409775,2105409777,2105409779,2105409780,2105409781,2105409991,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409962,2105409981,2105409846,2105409846,2105409846,2105409846,2105409846,2105409846,2105409948,2105409945,2105409946,2105409947,2105409951,2105409953,2105409954,2105409955,2105409966,2105409967,2105409969,2105409970,2105409971,2105409972,2105409973,2105409975,2105409976,2105409977,2105409978,2105409979,2105409980,2105409873,2105409873,2105409873,2105409873,2105409873},{1612139937, -11796406, -1475867566, -809369585, -809369583, -809369573, -809369578, -1475870010, -1475866992, -1475867021, -1475866924, -1475870494, -1475866937, -1475869652, -1475869444, -1475869521, -1475869696, -1475869752, -1475868325, -1475867681, -1475866982, -1475867822, -1475869597, -1475869357, -1475869983, -1475869190, -1475869856, -1475866911, -1475867002, -1475867811, -1475867586, -1475869320, -1475866894, -1475869221, -1475870154, -1475867807, -1475867568, -1475869663},{1190972738, -11796476, -11796468, -11796326, -1848049579, -11796325,2060386336, -11796475,2060386337, -11796332, -11796465,498,499, -1848049626, -11796479,450, -11796474, -11796328,2060386329, -11796333, -11796478,2060386339, -11796467, -1848049628,2060386341,2060386326, -11796466, -11796329,2060386340, -11796327,2060386338, -1848049597, -1848049624,451,449,500,2060386335, -11796473, -1848049590, -11796477, -11796464},{1759178769,2105409609, -11796310,2105409583,2060386307, -11795892, -11795883, -11795896, -11796285, -11795900, -11795887,2105409581, -11795886, -11795895, -11795890, -11795899, -11795882, -11796383,2105409606, -11795891, -11795898, -11795888, -11795889,2105409584, -11795893, -11796463, -11795884, -11795894, -11796206, -2015297409, -11795897, -11795881,2105409610, -11795885},{ -224855659, -1172110256, -1172110836, -1172110280, -1172110270, -1172110837, -1172110266, -1172110248, -1172110271, -1172110981, -1172110979, -1172110262, -1172110259, -1172110257, -1172110909, -1172110254, -1172110284, -1172110253, -1172110261, -1172110264, -1172110956, -1172110282, -1172110247, -1172110807, -1172110258},{649101397, -11795890, -11795899,1293287674, -11795882,1293287872, -11796383,1293287873, -11795889, -11795898, -11795893, -11795892, -11795884, -11795894, -11796206,1293287675, -11795896, -11795900, -11795887, -11795897, -11795888, -11795885, -11795886, -11795895, -11795881,1293287865, -11795891,1293287864, -11795883},{128844448, -11796452,506, -11796311, -11796359, -11796449, -11796313,924, -11796314, -11796315, -1765408760, -11796356, -11796406, -11796360, -11796407, -11796357, -11796312, -11796453, -11796358, -11796355, -11796451,867, -11796317, -11796316, -1765408758, -1765408759, -11796450, -11796455, -11796454},{ -1243448568,2060386410,2060386406, -11796432, -11796429,2060386412,2060386341,2060386460,2060386457,1674051698,2060386459,2060386349,2060386405,2060386458,2060386357,2060386408,2060386456,1926758854},{ -1036005362,2060386410,2060386459,2060386412,2060386341,1674051713,2060386457,2060386460,2060386349,1674051739, -11796429,2060386456,1674051695, -11796432,2060386408,2060386458},{1844499196,1167524221,1167523888,1167523878,1167523877,1167523895,1167523876,1167524306,1167524160,1167524220,1167524307,1167524218,1167524219,1167523889,1167523880}};v0=3;end if (v0==8) then local v32=0;local v33;while true do if (v32==0) then v33=0;while true do if (v33==4) then capespam=off;v0=9;break;end if (v33==2) then cur_cape=nil;cur_world1=nil;v33=3;end if (v33==0) then chat_read=off;noknock=off;v33=1;end if (v33==1) then godmode=off;walkwithinst=off;v33=2;end if (v33==3) then local v284=0;while true do if (1==v284) then v33=4;break;end if (v284==0) then oonaki=off;oonaki_resulfs=nil;v284=1;end end end end break;end end end if (v0==13) then local v34=0;local v35;while true do if (v34==0) then v35=0;while true do if (v35==4) then gg.searchNumber("1D;2D;5D;10D;20D;35D;55D;75D;100D;120D;150D;200D;250D;300D;400D::57",gg.TYPE_DWORD);v0=14;break;end if (v35==1) then local v285=0;while true do if (v285==0) then gg.searchNumber("8.52988648e-21;8.53898546e-21;8.47728296e-21::13",16);if (gg.getResultsCount()==3) then local v544=0;while true do if (v544==3) then gg.toast("4 - Successful");break;end if (v544==1) then local v630=0;while true do if (v630==1) then v544=2;break;end if (0==v630) then en0=8.597715e-21;en1=505794560;v630=1;end end end if (v544==0) then local v631=0;while true do if (v631==1) then v544=1;break;end if (v631==0) then a=gg.getResults(1);en=a[1].address-4 ;v631=1;end end end if (v544==2) then local v632=0;while true do if (v632==1) then v544=3;break;end if (v632==0) then xen=1;gg.clearResults();v632=1;end end end end else gg.toast("4 - Failed");end v285=1;end if (1==v285) then v35=2;break;end end end if (v35==3) then local v286=0;while true do if (1==v286) then v35=4;break;end if (v286==0) then gg.setRanges(gg.REGION_CODE_APP);gg.clearResults();v286=1;end end end if (v35==0) then local v287=0;while true do if (v287==1) then v35=1;break;end if (0==v287) then gg.sleep(500);gg.setRanges(gg.REGION_CODE_APP);v287=1;end end end if (v35==2) then local v288=0;while true do if (v288==1) then v35=3;break;end if (v288==0) then gg.sleep(500);if (v1.packageName==sky1) then local v545=0;while true do if (v545==1) then if (c1==1) then local v727=0;local v728;while true do if (0==v727) then v728=0;while true do if (0==v728) then local v844=0;while true do if (1==v844) then v728=1;break;end if (v844==0) then local v899=0;while true do if (v899==0) then gg.setRanges(mrange);gg.searchNumber(":com.tgc.sky.android.test.gold/0",gg.TYPE_BYTE,false,gg.SIGN_EQUAL,base0,base0 + 23068671 ,0);v899=1;end if (v899==1) then v844=1;break;end end end end end if (v728==1) then if (gg.getResultsCount()==0) then local v880=0;local v881;while true do if (0==v880) then v881=0;while true do if (v881==0) then gg.searchNumber(":com.tgc.sky.android.test.golx/0",gg.TYPE_BYTE,false,gg.SIGN_EQUAL,base0,base0 + 23068671 ,0);if (gg.getResultsCount()==0) then gg.toast("Failed");else gg.clearResults();gg.toast("Already bypassed");end break;end end break;end end else local v882=0;local v883;while true do if (v882==0) then v883=0;while true do if (v883==0) then local v933=0;while true do if (v933==1) then v883=1;break;end if (0==v933) then local v952=0;while true do if (v952==0) then gg.getResults(gg.getResultsCount());gg.editAll(":com.tgc.sky.android.test.golx/0",gg.TYPE_BYTE);v952=1;end if (1==v952) then v933=1;break;end end end end end if (v883==1) then gg.clearResults();gg.toast("Successful");break;end end break;end end end break;end end break;end end else gg.toast("Failed");end break;end if (v545==0) then local v633=0;while true do if (v633==1) then v545=1;break;end if (v633==0) then local v751=0;while true do if (v751==0) then gg.toast("Bypassing beta for virtual space");gg.sleep(1000);v751=1;end if (1==v751) then v633=1;break;end end end end end end end v288=1;end end end end break;end end end if (v0==22) then local v36=0;while true do if (0==v36) then local v128=0;while true do if (v128==1) then v36=1;break;end if (v128==0) then function propset(v379,v380)local v381=0;local v382;local v383;local v384;while true do if (1==v381) then v384=nil;while true do if (v382==1) then while true do if (v383==2) then gg.addListItems(v384);gg.setValues(v384);break;end if (v383==0) then local v729=0;while true do if (v729==1) then v383=1;break;end if (v729==0) then if (v380==nil) then v380=true;end v384=gg.getValues({{address=player + offsets.props_off ,flags=gg.TYPE_DWORD}});v729=1;end end end if (v383==1) then local v730=0;while true do if (v730==1) then v383=2;break;end if (v730==0) then v384[1].value=v379;v384[1].freeze=v380;v730=1;end end end end break;end if (v382==0) then v383=0;v384=nil;v382=1;end end break;end if (v381==0) then v382=0;v383=nil;v381=1;end end end function propmenu()local v385=0;local v386;local v387;local v388;local v389;while true do if (2==v385) then while true do if (v386==0) then v387=0;v388=nil;v386=1;end if (v386==1) then v389=nil;while true do if (v387==1) then v389=gg.choice(v388,nil,"prop:");if (v389==nil) then return;else local v776=0;while true do if (v776==0) then if (prop_bckp==nil) then prop_bckp=getadd(player + offsets.props_off ,gg.TYPE_DWORD);end if (v389== #propsid) then local v857=0;local v858;while true do if (v857==0) then v858=0;while true do if (v858==0) then propset(prop_bckp,false);prop_bckp=nil;break;end end break;end end else propset(propsid[v389][1]);end break;end end end break;end if (v387==0) then local v731=0;local v732;while true do if (0==v731) then v732=0;while true do if (v732==0) then local v845=0;while true do if (v845==1) then v732=1;break;end if (v845==0) then v388={};for v914,v915 in ipairs(propsid) do table.insert(v388,v915[2]);end v845=1;end end end if (v732==1) then v387=1;break;end end break;end end end end break;end end break;end if (v385==0) then v386=0;v387=nil;v385=1;end if (v385==1) then v388=nil;v389=nil;v385=2;end end end v128=1;end end end if (v36==4) then function PointsEnd(v213)local v214=0;local v215;local v216;local v217;while true do if (v214==0) then v215=0;v216=nil;v214=1;end if (v214==1) then v217=nil;while true do if (v215==1) then if (v216~=nil) then local v560=0;local v561;while true do if (0==v560) then v561=0;while true do if (v561==0) then while true do gg.setVisible(false);action=gg.choice(v217,nil,"We are in: "   .. get_map_name()   .. "\n (Teleport just for you)" );if (action==nil) then while true do if gg.isVisible(true) then gg.setVisible(false);break;end gg.sleep(500);end else break;end end if (action== #v217) then gg.toast("Done!");elseif (action==1) then ChangeMapDoPoints(v216.b.map);elseif (action==2) then ChangeMapDoPoints(v216.n.map);end break;end end break;end end else local v562=0;local v563;while true do if (0==v562) then v563=0;while true do if (v563==0) then local v777=0;while true do if (v777==0) then local v833=0;while true do if (v833==0) then gg.toast("Next map no found");return;end end end end end end break;end end end break;end if (v215==0) then v216=get_next_map(v213);v217={"⬅️|"   .. v216.b.name ,"➡️|"   .. v216.n.name ,"✔️| Listo!"};v215=1;end end break;end end end v0=23;break;end if (v36==1) then function capeset(v218,v219)local v220=0;local v221;local v222;while true do if (v220==0) then v221=0;v222=nil;v220=1;end if (v220==1) then while true do if (v221==0) then local v519=0;while true do if (v519==1) then v221=1;break;end if (0==v519) then local v606=0;while true do if (0==v606) then if (v219==nil) then v219=true;end v222=gg.getValues({{address=player + offsets.cape_off ,flags=gg.TYPE_DWORD},{address=player + offsets.cape2_off ,flags=gg.TYPE_DWORD}});v606=1;end if (1==v606) then v519=1;break;end end end end end if (v221==1) then local v520=0;while true do if (v520==1) then v221=2;break;end if (0==v520) then for v634,v635 in ipairs(v222) do local v636=0;local v637;local v638;while true do if (v636==1) then while true do if (v637==0) then v638=0;while true do if (v638==0) then v635.value=v218;v635.freeze=v219;break;end end break;end end break;end if (v636==0) then v637=0;v638=nil;v636=1;end end end if v219 then gg.addListItems(v222);else gg.removeListItems(v222);end v520=1;end end end if (v221==2) then gg.setValues(v222);break;end end break;end end end function capemenu()local v223=0;local v224;local v225;local v226;local v227;while true do if (v223==0) then v224=0;v225=nil;v223=1;end if (v223==1) then v226=nil;v227=nil;v223=2;end if (2==v223) then while true do if (v224==1) then v227=nil;while true do if (0==v225) then v226={};for v639,v640 in ipairs(capesid) do table.insert(v226,v640[2]);end v225=1;end if (1==v225) then v227=gg.choice(v226,nil,"Capes:");if (v227~=nil) then local v678=0;local v679;while true do if (0==v678) then v679=0;while true do if (0==v679) then if (cape_bckp==nil) then cape_bckp=getadd(player + offsets.cape_off ,gg.TYPE_DWORD);end if (v227== #v226) then local v861=0;local v862;while true do if (v861==0) then v862=0;while true do if (v862==0) then capeset(cape_bckp,false);cape_bckp=nil;break;end end break;end end else capeset(capesid[v227][1],true);end break;end end break;end end end break;end end break;end if (v224==0) then v225=0;v226=nil;v224=1;end end break;end end end v36=2;end if (v36==3) then function getAction()local v228=0;while true do if (v228==0) then actionmenu=gg.choice({"⬅️ Previous","➡️ Next","❌ END!","🛑 ABORT!"},nil,"choose:");if (actionmenu==1) then return  -1;elseif (actionmenu==2) then return 1;elseif (actionmenu==3) then return 0;elseif (actionmenu==4) then return  -999;end break;end end end function get_next_map(v229)local v230=0;local v231;local v232;local v233;local v234;local v235;local v236;while true do if (v230==0) then v231=0;v232=nil;v230=1;end if (v230==1) then v233=nil;v234=nil;v230=2;end if (v230==3) then while true do if (v231==2) then v236=nil;while true do local v546=0;while true do if (v546==1) then if (v232==3) then return nil;end if (v232==0) then local v733=0;while true do if (v733==0) then v233={};v234={};v733=1;end if (v733==1) then v232=1;break;end end end break;end if (v546==0) then if (v232==2) then local v734=0;while true do if (v734==0) then local v810=0;while true do if (v810==1) then v734=1;break;end if (v810==0) then for v863,v864 in ipairs(crpoints) do if (indexof(v236,v864.map)== -1) then local v900=0;local v901;while true do if (v900==0) then v901=0;while true do if (0==v901) then table.insert(v236,v864.map);table.insert(v235,{name=v864.name,map=v864.map});break;end end break;end end end end if (v229==v236[1]) then local v884=0;local v885;local v886;while true do if (v884==0) then v885=0;v886=nil;v884=1;end if (v884==1) then while true do if (v885==0) then v886=0;while true do if (v886==0) then local v953=0;local v954;while true do if (v953==0) then v954=0;while true do if (v954==0) then v233=v235[ #v235];v234=v235[2];v954=1;end if (v954==1) then v886=1;break;end end break;end end end if (1==v886) then return {b=v233,n=v234};end end break;end end break;end end elseif (v229==v236[ #v236]) then local v916=0;local v917;while true do if (v916==0) then v917=0;while true do local v934=0;while true do if (v934==0) then if (v917==0) then local v967=0;while true do if (v967==0) then v233=v235[ #v235-1 ];v234=v235[1];v967=1;end if (v967==1) then v917=1;break;end end end if (v917==1) then return {b=v233,n=v234};end break;end end end break;end end else for v920,v921 in ipairs(v235) do if (v921.map==v229) then local v929=0;local v930;while true do if (v929==0) then v930=0;while true do local v955=0;while true do if (v955==0) then if (v930==0) then local v972=0;local v973;while true do if (v972==0) then v973=0;while true do if (v973==1) then v930=1;break;end if (v973==0) then v233=v235[v920-1 ];v234=v235[v920 + 1 ];v973=1;end end break;end end end if (v930==1) then return {b=v233,n=v234};end break;end end end break;end end end end end v810=1;end end end if (v734==1) then v232=3;break;end end end if (1==v232) then local v735=0;while true do if (v735==1) then v232=2;break;end if (v735==0) then v235={};v236={};v735=1;end end end v546=1;end end end break;end if (v231==0) then v232=0;v233=nil;v231=1;end if (v231==1) then v234=nil;v235=nil;v231=2;end end break;end if (2==v230) then v235=nil;v236=nil;v230=3;end end end v36=4;end if (v36==2) then function nowind()local v237=0;local v238;while true do if (v237==0) then v238=0;while true do if (v238==0) then local v521=0;while true do if (v521==1) then v238=1;break;end if (0==v521) then xy={};for v641=0,100 do xk=nentity + offsets.wind_off + (v641 * 256) ;if (getadd(xk,gg.TYPE_DWORD)~=0) then for v752=1,14 do table.insert(xy,{address=xk-(v752 * 4) ,flags=gg.TYPE_DWORD,value=0});end end end v521=1;end end end if (v238==1) then gg.setValues(xy);break;end end break;end end end function clamp(v239,v240,v241)local v242=0;local v243;while true do if (v242==0) then v243=0;while true do local v427=0;while true do if (v427==0) then if (1==v243) then return v239;end if (v243==0) then if (v239<v240) then return v240;end if (v239>v241) then return v241;end v243=1;end break;end end end break;end end end v36=3;end end end if (v0==23) then local v37=0;while true do if (v37==4) then v5=false;v0=24;break;end if (v37==3) then function getCords()local v244=0;local v245;local v246;local v247;while true do local v271=0;while true do if (v271==1) then if (v244==1) then local v522=0;local v523;while true do if (0==v522) then v523=0;while true do if (v523==1) then v244=2;break;end if (v523==0) then v247=get_map();for v753,v754 in ipairs(crpoints) do if (v754.map==v247) then local v811=0;local v812;while true do if (0==v811) then v812=0;while true do if (v812==0) then v246=true;table.insert(v245,{v754.x,v754.y,v754.z});break;end end break;end end end end v523=1;end end break;end end end break;end if (v271==0) then local v428=0;while true do if (v428==0) then if (v244==0) then v245={};v246=nil;v244=1;end if (v244==2) then return v245,v246;end v428=1;end if (v428==1) then v271=1;break;end end end end end end function wing_charge()local v248=0;local v249;local v250;while true do if (v248==0) then v249=0;v250=nil;v248=1;end if (1==v248) then while true do if (v249==0) then v250=0;while true do if (v250==0) then local v607=0;local v608;while true do if (0==v607) then v608=0;while true do if (1==v608) then v250=1;break;end if (v608==0) then charg=on;chargwing[1].value="4.5";v608=1;end end break;end end end if (v250==1) then local v609=0;while true do if (v609==0) then gg.setValues(chargwing);gg.sleep(8000);v609=1;end if (v609==1) then v250=2;break;end end end if (2==v250) then gg.setValues(revertchargwing);charg=off;break;end end break;end end break;end end end v37=4;end if (v37==2) then function settingsmenu()local v251=0;local v252;local v253;while true do if (v251==0) then v252=0;v253=nil;v251=1;end if (v251==1) then while true do if (0==v252) then local v524=0;while true do if (0==v524) then v253=gg.choice({"Distance breackwall: "   .. settings.wdistance ,"Use Autoburn in AutoCandleRun: "   .. sign(settings.useautoburn) },nil,"settings:");if (v253==nil) then return;end v524=1;end if (v524==1) then v252=1;break;end end end if (v252==1) then if (v253==1) then local v564=0;local v565;while true do if (v564==0) then v565=gg.prompt({"Default distance: "   .. settings.wdistance },{[1]=settings.wdistance},{[1]="number"});if (v565~=nil) then settings.wdistance=v565[1];end v564=1;end if (v564==1) then gg.toast("Distance breackwall: "   .. settings.wdistance );break;end end elseif (v253==2) then local v642=0;while true do if (0==v642) then settings.useautoburn= not settings.useautoburn;gg.toast("Use Autoburn in AutoCandleRun: "   .. sign(settings.useautoburn) );break;end end end break;end end break;end end end function update()if (cosmetic_lock==on) then local v289=0;local v290;local v291;while true do if (v289==0) then v290=0;v291=nil;v289=1;end if (v289==1) then while true do if (v290==0) then v291=0;while true do if (v291==0) then ccape2=gg.getValues({{address=player + offsets.cape2_off ,flags=gg.TYPE_DWORD}})[1].value;if (cur_cape~=ccape2) then local v758=0;local v759;while true do if (v758==0) then v759=0;while true do if (v759==0) then ccape=gg.getValues({{address=player + offsets.cape_off ,flags=gg.TYPE_DWORD}})[1].value;if (ccape==ccape2) then local v902=0;local v903;while true do if (v902==0) then v903=0;while true do if (v903==0) then wrld=get_map();if (cur_world1~=wrld) then local v956=0;local v957;while true do if (v956==0) then v957=0;while true do if (v957==0) then capeset(cur_cape,false);cur_world1=wrld;break;end end break;end end end break;end end break;end end else local v904=0;local v905;local v906;while true do if (v904==0) then v905=0;v906=nil;v904=1;end if (1==v904) then while true do if (v905==0) then v906=0;while true do if (0==v906) then capeset(ccape2,false);cur_cape=ccape2;break;end end break;end end break;end end end break;end end break;end end end break;end end break;end end break;end end end end v37=3;end if (v37==1) then local v129=0;while true do if (v129==0) then function ChangeMapDoPoints(v390)local v391=0;local v392;local v393;while true do if (v391==1) then while true do if (v392==1) then while v393~=v390  do local v643=0;local v644;local v645;while true do if (v643==1) then while true do if (v644==0) then v645=0;while true do if (v645==0) then gg.sleep(1000);v393=get_map();break;end end break;end end break;end if (v643==0) then v644=0;v645=nil;v643=1;end end end gg.sleep(1000);v392=2;end if (v392==0) then v393=get_map();change_map(v390);v392=1;end if (v392==2) then while true do if gg.isVisible(true) then gg.setVisible(false);break;end gg.sleep(500);end DoPoints(make_points_list(v390));break;end end break;end if (v391==0) then v392=0;v393=nil;v391=1;end end end function DoPoints(v394,v395,v396)local v397=0;local v398;local v399;local v400;local v401;local v402;local v403;local v404;local v405;while true do if (3==v397) then v404=nil;v405=nil;v397=4;end if (2==v397) then v402=nil;v403=nil;v397=3;end if (v397==0) then v398=0;v399=nil;v397=1;end if (v397==1) then v400=nil;v401=nil;v397=2;end if (v397==4) then while true do if (v398==3) then v405=60000;while v402<= #v394  do local v646=0;local v647;while true do if (0==v646) then v647=0;while true do if (v647==1) then gg.setValues({{address=coords['x'],flags=gg.TYPE_FLOAT,value=v394[v402].x},{address=coords['y'],flags=gg.TYPE_FLOAT,value=v394[v402].y},{address=coords['z'],flags=gg.TYPE_FLOAT,value=v394[v402].z}});if ( not (v394[v402].e==true) and  not (v402== #v394)) then local v846=0;local v847;while true do if (v846==0) then v847=0;while true do if (1==v847) then if (a== -999) then local v935=0;local v936;while true do if (v935==0) then v936=0;while true do if (v936==0) then local v968=0;local v969;while true do if (v968==0) then v969=0;while true do if (0==v969) then local v989=0;while true do if (v989==1) then v969=1;break;end if (v989==0) then gg.setValues(v401);v402= #v394 + 1 ;v989=1;end end end if (v969==1) then v936=1;break;end end break;end end end if (v936==1) then v400=true;break;end end break;end end elseif (a==0) then local v943=0;while true do if (v943==0) then v400=true;v402= #v394 + 1 ;break;end end else local v944=0;local v945;while true do if (0==v944) then v945=0;while true do if (v945==0) then v402=v402 + a ;if (a== -1) then local v979=0;local v980;local v981;while true do if (0==v979) then v980=0;v981=nil;v979=1;end if (v979==1) then while true do if (v980==0) then v981=0;while true do if (0==v981) then v402=clamp(v402,1, #v394);if (v394[v402].e==true) then v402=v402-1 ;end break;end end break;end end break;end end end break;end end break;end end end v403=0;break;end if (0==v847) then local v923=0;local v924;while true do if (v923==0) then v924=0;while true do if (v924==0) then local v961=0;while true do if (v961==1) then v924=1;break;end if (v961==0) then while true do if gg.isVisible(true) then gg.setVisible(false);a=1;break;else gg.sleep(v404);v403=v403 + v404 ;if (v403>=v405) then gg.toast("Manual mode");break;end end end while v403>=v405  do if gg.isVisible(true) then gg.setVisible(false);a=getAction();if (a~=nil) then break;end end end v961=1;end end end if (v924==1) then v847=1;break;end end break;end end end end break;end end else local v848=0;local v849;while true do if (v848==0) then v849=0;while true do if (0==v849) then v402=v402 + 1 ;gg.sleep(100);break;end end break;end end end break;end if (v647==0) then local v825=0;while true do if (v825==1) then v647=1;break;end if (v825==0) then gg.toast(tostring(v402)   .. " / "   ..  #v394 );if v396 then gg.setValues({{address=candle,flags=gg.TYPE_BYTE,value=1}});end v825=1;end end end end break;end end end if v399 then set_autoburn(false);end v398=4;end if (v398==1) then local v610=0;while true do if (v610==0) then if (v396==nil) then v396=false;end if (v395==nil) then v395=false;end v610=1;end if (1==v610) then v401=gg.getValues({{address=coords.x,flags=gg.TYPE_FLOAT},{address=coords.y,flags=gg.TYPE_FLOAT},{address=coords.z,flags=gg.TYPE_FLOAT}});v398=2;break;end end end if (v398==4) then if v396 then gg.setValues({{address=candle,flags=gg.TYPE_BYTE,value=0}});end if (v400==false) then gotomenu();end break;end if (v398==0) then v399=false;v400=false;if settings.useautoburn then if (autoburn==off) then local v760=0;while true do if (v760==0) then set_autoburn(true);v399=true;break;end end end end v398=1;end if (v398==2) then v402=1;v403=0;v404=250;v398=3;end end break;end end end v129=1;end if (v129==1) then v37=2;break;end end end if (v37==0) then function gotomenu()local v254=0;local v255;local v256;while true do if (v254==0) then local v406=0;while true do if (v406==1) then v254=1;break;end if (v406==0) then v255=0;v256=nil;v406=1;end end end if (v254==1) then while true do if (v255==0) then local v525=0;while true do if (v525==0) then v256=get_map();ppoints=make_positions(v256);v525=1;end if (v525==1) then v255=1;break;end end end if (v255==1) then if (ppoints~=nil) then local v566=0;local v567;while true do if (v566==0) then v567=0;while true do if (v567==0) then local v778=0;local v779;while true do if (v778==0) then v779=0;while true do if (v779==0) then mp_names=get_names(ppoints);place=gg.choice(mp_names,nil,"Where do you want to go?");v779=1;end if (1==v779) then v567=1;break;end end break;end end end if (v567==2) then setposit(pos.x,pos.y,pos.z);gg.toast(place);break;end if (v567==1) then local v780=0;local v781;while true do if (v780==0) then v781=0;while true do if (v781==1) then v567=2;break;end if (v781==0) then local v887=0;while true do if (v887==0) then if (place==nil) then return;end pos=get_pos_by_name(ppoints,mp_names[place]);v887=1;end if (1==v887) then v781=1;break;end end end end break;end end end end break;end end else gg.toast("there are no places to go here.");end break;end end break;end end end function ChangeMapDoPoints(v257)local v258=0;local v259;while true do if (v258==0) then v259=get_map();change_map(v257);v258=1;end if (v258==2) then while true do if gg.isVisible(true) then gg.setVisible(false);break;end gg.sleep(500);end DoPoints(make_points_list(v257));break;end if (v258==1) then while v259~=v257  do local v429=0;while true do if (v429==0) then gg.sleep(1000);v259=get_map();break;end end end gg.sleep(1000);v258=2;end end end v37=1;end end end if (v0==6) then local v38=0;local v39;while true do if (v38==0) then v39=0;while true do if (v39==4) then plants=find_plants();v0=7;break;end if (v39==0) then cape_bckp=nil;wind_bckp={};v39=1;end if (v39==3) then autoburn=off;candles=find_candles();v39=4;end if (2==v39) then local v292=0;while true do if (v292==0) then inffire=off;fakesleep=off;v292=1;end if (v292==1) then v39=3;break;end end end if (v39==1) then custom_teleport_points={};mslot={"❌empty","❌empty","❌empty","❌empty","❌empty","❌empty","❌empty","❌empty","❌empty"};v39=2;end end break;end end end if (v0==16) then local v40=0;while true do if (v40==0) then gg.clearResults();revertchargwing={};v40=1;end if (v40==2) then clouds=gg.getResults(5);gg.clearResults();v40=3;end if (v40==4) then gg.setRanges(gg.REGION_CODE_APP);v0=17;break;end if (v40==1) then for v260,v261 in ipairs(chargwing) do revertchargwing[v260]={address=v261.address,flags=v261.flags,value=v261.value};end gg.searchNumber("1D;0.15000000596F;0.5F;1.0F;0.40000000596F::25",gg.TYPE_DWORD);v40=2;end if (v40==3) then revertclouds={};for v263,v264 in ipairs(clouds) do revertclouds[v263]={address=v264.address,flags=v264.flags,value=v264.value};end v40=4;end end end end end